//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace srcrepair.gui {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CVList {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CVList() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("srcrepair.gui.CVList", typeof(CVList).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binds a key with a command..
        /// </summary>
        internal static string bind {
            get {
                return ResourceManager.GetString("bind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, bots may use grenades..
        /// </summary>
        internal static string bot_allow_grenades {
            get {
                return ResourceManager.GetString("bot_allow_grenades", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, bots may use the machine gun..
        /// </summary>
        internal static string bot_allow_machine_guns {
            get {
                return ResourceManager.GetString("bot_allow_machine_guns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, bots may use pistols..
        /// </summary>
        internal static string bot_allow_pistols {
            get {
                return ResourceManager.GetString("bot_allow_pistols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, bots may use rifles..
        /// </summary>
        internal static string bot_allow_rifles {
            get {
                return ResourceManager.GetString("bot_allow_rifles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, bots may use shotguns..
        /// </summary>
        internal static string bot_allow_shotguns {
            get {
                return ResourceManager.GetString("bot_allow_shotguns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, bots may use sniper rifles..
        /// </summary>
        internal static string bot_allow_snipers {
            get {
                return ResourceManager.GetString("bot_allow_snipers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, bots may use sub-machine guns..
        /// </summary>
        internal static string bot_allow_sub_machine_guns {
            get {
                return ResourceManager.GetString("bot_allow_sub_machine_guns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount above avg human contribution score, above which a bot should lower its difficulty..
        /// </summary>
        internal static string bot_autodifficulty_threshold_high {
            get {
                return ResourceManager.GetString("bot_autodifficulty_threshold_high", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount below avg human contribution score, below which a bot should raise its difficulty..
        /// </summary>
        internal static string bot_autodifficulty_threshold_low {
            get {
                return ResourceManager.GetString("bot_autodifficulty_threshold_low", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control how bots talk. Allowed values: &apos;off&apos;, &apos;radio&apos;, &apos;minimal&apos;, or &apos;normal&apos;..
        /// </summary>
        internal static string bot_chatter {
            get {
                return ResourceManager.GetString("bot_chatter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero and there is a human on the team, the bots will not do the scenario tasks..
        /// </summary>
        internal static string bot_defer_to_human_goals {
            get {
                return ResourceManager.GetString("bot_defer_to_human_goals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero and there is a human on the team, the bots will not get scenario items..
        /// </summary>
        internal static string bot_defer_to_human_items {
            get {
                return ResourceManager.GetString("bot_defer_to_human_items", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bot difficulty..
        /// </summary>
        internal static string bot_difficulty {
            get {
                return ResourceManager.GetString("bot_difficulty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines the total number of bots in the game..
        /// </summary>
        internal static string bot_quota {
            get {
                return ResourceManager.GetString("bot_quota", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines the type of quota. Allowed values: &apos;normal&apos;, &apos;fill&apos;, and &apos;match&apos;. If &apos;fill&apos;, the server will adjust bots to keep N players in the game, where N is bot_quota. If &apos;match&apos;, the server will maintain a 1:N ratio of humans to bots, where N is bot_quota..
        /// </summary>
        internal static string bot_quota_mode {
            get {
                return ResourceManager.GetString("bot_quota_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The penalty (or bonus) players get from harming a hostage..
        /// </summary>
        internal static string cash_player_damage_hostage {
            get {
                return ResourceManager.GetString("cash_player_damage_hostage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Money a player can get when they are killed by another player..
        /// </summary>
        internal static string cash_player_get_killed {
            get {
                return ResourceManager.GetString("cash_player_get_killed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Money award to player when they kill an enemy (which then gets scaled per weapon)..
        /// </summary>
        internal static string cash_player_killed_enemy_default {
            get {
                return ResourceManager.GetString("cash_player_killed_enemy_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaler that adjusts the money recieved per kill..
        /// </summary>
        internal static string cash_player_killed_enemy_factor {
            get {
                return ResourceManager.GetString("cash_player_killed_enemy_factor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The penalty (or bonus) players get for killing a hostage..
        /// </summary>
        internal static string cash_player_killed_hostage {
            get {
                return ResourceManager.GetString("cash_player_killed_hostage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The money bonus a play can get when they respawn (if respawning is enabled)..
        /// </summary>
        internal static string cash_player_respawn_amount {
            get {
                return ResourceManager.GetString("cash_player_respawn_amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes the map..
        /// </summary>
        internal static string changelevel {
            get {
                return ResourceManager.GetString("changelevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client downloads customization files..
        /// </summary>
        internal static string cl_allowdownload {
            get {
                return ResourceManager.GetString("cl_allowdownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client uploads customization files..
        /// </summary>
        internal static string cl_allowupload {
            get {
                return ResourceManager.GetString("cl_allowupload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hud element to examine..
        /// </summary>
        internal static string cl_animationinfo {
            get {
                return ResourceManager.GetString("cl_animationinfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, auto-ask for local/LAN servers (for debugging)..
        /// </summary>
        internal static string cl_ask_blacklist_for_any_server {
            get {
                return ResourceManager.GetString("cl_ask_blacklist_for_any_server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If player stays on a server for less than this time (in seconds) prompt to add server to blacklist..
        /// </summary>
        internal static string cl_ask_blacklist_max_session_duration {
            get {
                return ResourceManager.GetString("cl_ask_blacklist_max_session_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns question whether to blacklist a server after leaving after a short amount of time off/on..
        /// </summary>
        internal static string cl_ask_blacklist_opt_out {
            get {
                return ResourceManager.GetString("cl_ask_blacklist_opt_out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, auto-ask for local/LAN servers (for debugging)..
        /// </summary>
        internal static string cl_ask_favorite_for_any_server {
            get {
                return ResourceManager.GetString("cl_ask_favorite_for_any_server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If player stays on a server for longer than this time (in seconds) prompt to add server to favorites..
        /// </summary>
        internal static string cl_ask_favorite_min_session_duration {
            get {
                return ResourceManager.GetString("cl_ask_favorite_min_session_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns question whether to favorite a server after leaving after a longer amount of time off/on..
        /// </summary>
        internal static string cl_ask_favorite_opt_out {
            get {
                return ResourceManager.GetString("cl_ask_favorite_opt_out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns automatic reloading off/on..
        /// </summary>
        internal static string cl_autoreload {
            get {
                return ResourceManager.GetString("cl_autoreload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns Sniper Rifle re-zoom off/on..
        /// </summary>
        internal static string cl_autorezoom {
            get {
                return ResourceManager.GetString("cl_autorezoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert players avatars to RGB format..
        /// </summary>
        internal static string cl_avatar_convert_rgb {
            get {
                return ResourceManager.GetString("cl_avatar_convert_rgb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - burning gibs off/on..
        /// </summary>
        internal static string cl_burninggibs {
            get {
                return ResourceManager.GetString("cl_burninggibs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stores the chat filter settings..
        /// </summary>
        internal static string cl_chatfilters {
            get {
                return ResourceManager.GetString("cl_chatfilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default class when joining a game..
        /// </summary>
        internal static string cl_class {
            get {
                return ResourceManager.GetString("cl_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear memory of client side hints displayed to the player..
        /// </summary>
        internal static string cl_clearhinthistory {
            get {
                return ResourceManager.GetString("cl_clearhinthistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable/disable clock correction on the client..
        /// </summary>
        internal static string cl_clock_correction {
            get {
                return ResourceManager.GetString("cl_clock_correction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the maximum number of milliseconds per second it is allowed to correct the client clock..
        /// </summary>
        internal static string cl_clock_correction_adjustment_max_amount {
            get {
                return ResourceManager.GetString("cl_clock_correction_adjustment_max_amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As the clock offset goes from cl_clock_correction_adjustment_min_offset to this value (in milliseconds)..
        /// </summary>
        internal static string cl_clock_correction_adjustment_max_offset {
            get {
                return ResourceManager.GetString("cl_clock_correction_adjustment_max_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the clock offset is less than this amount (in milliseconds), then no clock correction is applied..
        /// </summary>
        internal static string cl_clock_correction_adjustment_min_offset {
            get {
                return ResourceManager.GetString("cl_clock_correction_adjustment_min_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force clock correction to match the server tick + this offset (-999 disables it)..
        /// </summary>
        internal static string cl_clock_correction_force_server_tick {
            get {
                return ResourceManager.GetString("cl_clock_correction_force_server_tick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show debugging info about the clock drift..
        /// </summary>
        internal static string cl_clock_showdebuginfo {
            get {
                return ResourceManager.GetString("cl_clock_showdebuginfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server&apos;s..
        /// </summary>
        internal static string cl_clockdrift_max_ms {
            get {
                return ResourceManager.GetString("cl_clockdrift_max_ms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the server&apos;s..
        /// </summary>
        internal static string cl_clockdrift_max_ms_threadmode {
            get {
                return ResourceManager.GetString("cl_clockdrift_max_ms_threadmode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max number of command packets sent to server per second..
        /// </summary>
        internal static string cl_cmdrate {
            get {
                return ResourceManager.GetString("cl_cmdrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request a coach for the current game..
        /// </summary>
        internal static string cl_coach_find_coach {
            get {
                return ResourceManager.GetString("cl_coach_find_coach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle coach status..
        /// </summary>
        internal static string cl_coach_toggle {
            get {
                return ResourceManager.GetString("cl_coach_toggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets crosshair picture. &quot;&quot; is standard-crosshairs..
        /// </summary>
        internal static string cl_crosshair_file {
            get {
                return ResourceManager.GetString("cl_crosshair_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Includes standing inaccuracy and spread in your sniper crosshair blur..
        /// </summary>
        internal static string cl_crosshair_sniper_show_normal_inaccuracy {
            get {
                return ResourceManager.GetString("cl_crosshair_sniper_show_normal_inaccuracy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow increasing width of sniper crosshair lines on high dpi monitors or multimonitor setups..
        /// </summary>
        internal static string cl_crosshair_sniper_width {
            get {
                return ResourceManager.GetString("cl_crosshair_sniper_width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use T-shaped crosshair..
        /// </summary>
        internal static string cl_crosshair_t {
            get {
                return ResourceManager.GetString("cl_crosshair_t", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable customized player sound playback..
        /// </summary>
        internal static string cl_customsounds {
            get {
                return ResourceManager.GetString("cl_customsounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disallow appending observer numbers to kill feed (0: defaults for no numbers, 1: to use just observer numbers in death notices, 2: append observer numbers in front of names in death notices)..
        /// </summary>
        internal static string cl_deathnotices_show_numbers {
            get {
                return ResourceManager.GetString("cl_deathnotices_show_numbers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn on rumble debugging spew..
        /// </summary>
        internal static string cl_debugrumble {
            get {
                return ResourceManager.GetString("cl_debugrumble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tries to decline/remove the first notification..
        /// </summary>
        internal static string cl_decline_first_notification {
            get {
                return ResourceManager.GetString("cl_decline_first_notification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override view during demo playback..
        /// </summary>
        internal static string cl_demoviewoverride {
            get {
                return ResourceManager.GetString("cl_demoviewoverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extra details to create..
        /// </summary>
        internal static string cl_detail_multiplier {
            get {
                return ResourceManager.GetString("cl_detail_multiplier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance at which detail props are no longer visible..
        /// </summary>
        internal static string cl_detaildist {
            get {
                return ResourceManager.GetString("cl_detaildist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance across which detail props fade in..
        /// </summary>
        internal static string cl_detailfade {
            get {
                return ResourceManager.GetString("cl_detailfade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable HTML motds..
        /// </summary>
        internal static string cl_disablehtmlmotd {
            get {
                return ResourceManager.GetString("cl_disablehtmlmotd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines which files can be downloaded from the server (all, none, nosounds)..
        /// </summary>
        internal static string cl_downloadfilter {
            get {
                return ResourceManager.GetString("cl_downloadfilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw only deathnotices..
        /// </summary>
        internal static string cl_draw_only_deathnotices {
            get {
                return ResourceManager.GetString("cl_draw_only_deathnotices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hides/shows the HUD - sv_cheats 1 required..
        /// </summary>
        internal static string cl_drawhud {
            get {
                return ResourceManager.GetString("cl_drawhud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -1 to force draw no deathnotices, 0 default, 1 to force draw deathnotices even if other HUD is disabled..
        /// </summary>
        internal static string cl_drawhud_force_deathnotices {
            get {
                return ResourceManager.GetString("cl_drawhud_force_deathnotices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show / hide radar and minimap on special HUD modes..
        /// </summary>
        internal static string cl_drawhud_force_radar {
            get {
                return ResourceManager.GetString("cl_drawhud_force_radar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw a particular material over the frame..
        /// </summary>
        internal static string cl_drawmaterial {
            get {
                return ResourceManager.GetString("cl_drawmaterial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dump particle profiling info to particle_profile.csv..
        /// </summary>
        internal static string cl_dump_particle_stats {
            get {
                return ResourceManager.GetString("cl_dump_particle_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the client&apos;s absbox for the entity under the crosshair..
        /// </summary>
        internal static string cl_ent_absbox {
            get {
                return ResourceManager.GetString("cl_ent_absbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the client&apos;s bounding box for the entity under the crosshair..
        /// </summary>
        internal static string cl_ent_bbox {
            get {
                return ResourceManager.GetString("cl_ent_bbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the client&apos;s render box for the entity under the crosshair..
        /// </summary>
        internal static string cl_ent_rbox {
            get {
                return ResourceManager.GetString("cl_ent_rbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For debugging, draw entity states to console..
        /// </summary>
        internal static string cl_entityreport {
            get {
                return ResourceManager.GetString("cl_entityreport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For debugging, draw entity states to console in sorted order. [0 = disabled, 1 = average, 2 = current, 3 = peak]..
        /// </summary>
        internal static string cl_entityreport_sorted {
            get {
                return ResourceManager.GetString("cl_entityreport_sorted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable/disable extrapolation if interpolation history runs out..
        /// </summary>
        internal static string cl_extrapolate {
            get {
                return ResourceManager.GetString("cl_extrapolate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set how many seconds the client will extrapolate entities for..
        /// </summary>
        internal static string cl_extrapolate_amount {
            get {
                return ResourceManager.GetString("cl_extrapolate_amount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to use new detail sprite system..
        /// </summary>
        internal static string cl_fastdetailsprites {
            get {
                return ResourceManager.GetString("cl_fastdetailsprites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find and list all client entities with classnames that contain the specified substring. Format: cl_find_ent &lt;substring&gt;..
        /// </summary>
        internal static string cl_find_ent {
            get {
                return ResourceManager.GetString("cl_find_ent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display data for clientside entity matching specified index. Format: cl_find_ent_index &lt;index&gt;..
        /// </summary>
        internal static string cl_find_ent_index {
            get {
                return ResourceManager.GetString("cl_find_ent_index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow this mode to be used outside of VR mode..
        /// </summary>
        internal static string cl_first_person_uses_world_model {
            get {
                return ResourceManager.GetString("cl_first_person_uses_world_model", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - sets viewmodels normal/inverted(left-handed) - does not work while connected to a server..
        /// </summary>
        internal static string cl_flipviewmodels {
            get {
                return ResourceManager.GetString("cl_flipviewmodels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For debugging. Force the engine to flush an entity packet..
        /// </summary>
        internal static string cl_flushentitypacket {
            get {
                return ResourceManager.GetString("cl_flushentitypacket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether we should force preloading..
        /// </summary>
        internal static string cl_forcepreload {
            get {
                return ResourceManager.GetString("cl_forcepreload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forces the server to send a full update packet..
        /// </summary>
        internal static string cl_fullupdate {
            get {
                return ResourceManager.GetString("cl_fullupdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create identity for dedicated server..
        /// </summary>
        internal static string cl_gameserver_create_identity {
            get {
                return ResourceManager.GetString("cl_gameserver_create_identity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List all of the game server accounts owned by the currently logged in Steam account..
        /// </summary>
        internal static string cl_gameserver_list {
            get {
                return ResourceManager.GetString("cl_gameserver_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resets the identity token for a given game server..
        /// </summary>
        internal static string cl_gameserver_reset_identity {
            get {
                return ResourceManager.GetString("cl_gameserver_reset_identity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 1 to turn on the advanced minimalist HUD mode..
        /// </summary>
        internal static string cl_hud_minmode {
            get {
                return ResourceManager.GetString("cl_hud_minmode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable hudhint sounds..
        /// </summary>
        internal static string cl_hudhint_sound {
            get {
                return ResourceManager.GetString("cl_hudhint_sound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force client to ignore packets (for debugging)..
        /// </summary>
        internal static string cl_ignorepackets {
            get {
                return ResourceManager.GetString("cl_ignorepackets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets how far character models are interpolated (drawn away from their actual position) in the world, a good standard value for hitscan weapons is 0.034..
        /// </summary>
        internal static string cl_interp {
            get {
                return ResourceManager.GetString("cl_interp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable interpolation list optimizations..
        /// </summary>
        internal static string cl_interp_all {
            get {
                return ResourceManager.GetString("cl_interp_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interpolate NPC positions starting this many seconds in past..
        /// </summary>
        internal static string cl_interp_npcs {
            get {
                return ResourceManager.GetString("cl_interp_npcs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the interpolation amount (final amount is cl_interp_ratio / cl_updaterate)..
        /// </summary>
        internal static string cl_interp_ratio {
            get {
                return ResourceManager.GetString("cl_interp_ratio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display physics-based &apos;jiggle bone&apos; debugging information..
        /// </summary>
        internal static string cl_jiggle_bone_debug {
            get {
                return ResourceManager.GetString("cl_jiggle_bone_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display physics-based &apos;jiggle bone&apos; debugging information..
        /// </summary>
        internal static string cl_jiggle_bone_debug_pitch_constraints {
            get {
                return ResourceManager.GetString("cl_jiggle_bone_debug_pitch_constraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display physics-based &apos;jiggle bone&apos; debugging information..
        /// </summary>
        internal static string cl_jiggle_bone_debug_yaw_constraints {
            get {
                return ResourceManager.GetString("cl_jiggle_bone_debug_yaw_constraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip jiggle bone simulation if framerate drops below this value (frames/second)..
        /// </summary>
        internal static string cl_jiggle_bone_framerate_cutoff {
            get {
                return ResourceManager.GetString("cl_jiggle_bone_framerate_cutoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform server side lag compensation of weapon firing events..
        /// </summary>
        internal static string cl_lagcompensation {
            get {
                return ResourceManager.GetString("cl_lagcompensation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language (from HKCU\Software\Valve\Steam\Language)..
        /// </summary>
        internal static string cl_language {
            get {
                return ResourceManager.GetString("cl_language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable network optimizations for single player games..
        /// </summary>
        internal static string cl_localnetworkbackdoor {
            get {
                return ResourceManager.GetString("cl_localnetworkbackdoor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spraypoint logo decal..
        /// </summary>
        internal static string cl_logofile {
            get {
                return ResourceManager.GetString("cl_logofile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max distance from the camera at which things will be rendered..
        /// </summary>
        internal static string cl_maxrenderable_dist {
            get {
                return ResourceManager.GetString("cl_maxrenderable_dist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 1 to use mouse for look, 0 for keyboard look. Cannot be set while connected to a server..
        /// </summary>
        internal static string cl_mouselook {
            get {
                return ResourceManager.GetString("cl_mouselook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you mute a player, the mute settings now apply to text chat as well as voice chat..
        /// </summary>
        internal static string cl_mute_all_comms {
            get {
                return ResourceManager.GetString("cl_mute_all_comms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns new, better looking impact effects off/on, most noticeable on glass..
        /// </summary>
        internal static string cl_new_impact_effects {
            get {
                return ResourceManager.GetString("cl_new_impact_effects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many notifications are visible in-game..
        /// </summary>
        internal static string cl_notifications_max_num_visible {
            get {
                return ResourceManager.GetString("cl_notifications_max_num_visible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long it takes for a notification to move..
        /// </summary>
        internal static string cl_notifications_move_time {
            get {
                return ResourceManager.GetString("cl_notifications_move_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether notifications should show up in-game..
        /// </summary>
        internal static string cl_notifications_show_ingame {
            get {
                return ResourceManager.GetString("cl_notifications_show_ingame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug building damage..
        /// </summary>
        internal static string cl_obj_test_building_damage {
            get {
                return ResourceManager.GetString("cl_obj_test_building_damage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows panel animation variables: &lt;panelname | blank for all panels&gt;..
        /// </summary>
        internal static string cl_panelanimation {
            get {
                return ResourceManager.GetString("cl_panelanimation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add this amount to a particle effect&apos;s bbox in the leaf system so if it&apos;s growing slowly, it won&apos;t have to be reinserted as often..
        /// </summary>
        internal static string cl_particleeffect_aabb_buffer {
            get {
                return ResourceManager.GetString("cl_particleeffect_aabb_buffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dump entity by prediction classname..
        /// </summary>
        internal static string cl_pclass {
            get {
                return ResourceManager.GetString("cl_pclass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dump info about this entity to screen..
        /// </summary>
        internal static string cl_pdump {
            get {
                return ResourceManager.GetString("cl_pdump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable clientside physics props (must be set before loading a level)..
        /// </summary>
        internal static string cl_phys_props_enable {
            get {
                return ResourceManager.GetString("cl_phys_props_enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum clientside physic props..
        /// </summary>
        internal static string cl_phys_props_max {
            get {
                return ResourceManager.GetString("cl_phys_props_max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum distance from the player that a clientside prop must be before it&apos;s allowed to respawn..
        /// </summary>
        internal static string cl_phys_props_respawndist {
            get {
                return ResourceManager.GetString("cl_phys_props_respawndist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time, in seconds, between clientside prop respawns..
        /// </summary>
        internal static string cl_phys_props_respawnrate {
            get {
                return ResourceManager.GetString("cl_phys_props_respawnrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the scale of time for client-side physics (ragdolls)..
        /// </summary>
        internal static string cl_phys_timescale {
            get {
                return ResourceManager.GetString("cl_phys_timescale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client pitch speed..
        /// </summary>
        internal static string cl_pitchspeed {
            get {
                return ResourceManager.GetString("cl_pitchspeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the client to playback screenshot and jpeg commands in demos..
        /// </summary>
        internal static string cl_playback_screenshots {
            get {
                return ResourceManager.GetString("cl_playback_screenshots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable player sprays..
        /// </summary>
        internal static string cl_playerspraydisable {
            get {
                return ResourceManager.GetString("cl_playerspraydisable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show precache info (client)..
        /// </summary>
        internal static string cl_precacheinfo {
            get {
                return ResourceManager.GetString("cl_precacheinfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optimize for not copying data if didn&apos;t receive a network update (1), and also for not repredicting if there were no errors (2)..
        /// </summary>
        internal static string cl_pred_optimize {
            get {
                return ResourceManager.GetString("cl_pred_optimize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Track changes to entity index entindex, for field fieldname..
        /// </summary>
        internal static string cl_pred_track {
            get {
                return ResourceManager.GetString("cl_pred_track", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform client side prediction..
        /// </summary>
        internal static string cl_predict {
            get {
                return ResourceManager.GetString("cl_predict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show which entities are predicting..
        /// </summary>
        internal static string cl_predictionlist {
            get {
                return ResourceManager.GetString("cl_predictionlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform client side prediction of weapon effects..
        /// </summary>
        internal static string cl_predictweapons {
            get {
                return ResourceManager.GetString("cl_predictweapons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns ragdoll collisions on/off..
        /// </summary>
        internal static string cl_ragdoll_collide {
            get {
                return ResourceManager.GetString("cl_ragdoll_collide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets time until ragdolls disappear..
        /// </summary>
        internal static string cl_ragdoll_fade_time {
            get {
                return ResourceManager.GetString("cl_ragdoll_fade_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable/disable ragdoll physics..
        /// </summary>
        internal static string cl_ragdoll_physics_enable {
            get {
                return ResourceManager.GetString("cl_ragdoll_physics_enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove the decals from the entity under the crosshair..
        /// </summary>
        internal static string cl_removedecals {
            get {
                return ResourceManager.GetString("cl_removedecals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay in seconds before the client will resend the &apos;connect&apos; attempt..
        /// </summary>
        internal static string cl_resend {
            get {
                return ResourceManager.GetString("cl_resend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale sensitivity of rumble effects (0 to 1.0)..
        /// </summary>
        internal static string cl_rumblescale {
            get {
                return ResourceManager.GetString("cl_rumblescale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Screenshot name..
        /// </summary>
        internal static string cl_screenshotname {
            get {
                return ResourceManager.GetString("cl_screenshotname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the number of active particle systems..
        /// </summary>
        internal static string cl_show_num_particle_systems {
            get {
                return ResourceManager.GetString("cl_show_num_particle_systems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bindable function. Will show teammates’ full Target ID, including equipment..
        /// </summary>
        internal static string cl_show_team_equipment {
            get {
                return ResourceManager.GetString("cl_show_team_equipment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns color-coded items in backpack off/on..
        /// </summary>
        internal static string cl_showbackpackrarities {
            get {
                return ResourceManager.GetString("cl_showbackpackrarities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw current battery level at top of screen when on battery power..
        /// </summary>
        internal static string cl_showbattery {
            get {
                return ResourceManager.GetString("cl_showbattery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show which entities are having their bones setup each frame..
        /// </summary>
        internal static string cl_ShowBoneSetupEnts {
            get {
                return ResourceManager.GetString("cl_ShowBoneSetupEnts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How often to flash demo recording/playback overlay (0 - disable overlay, -1 - show always)..
        /// </summary>
        internal static string cl_showdemooverlay {
            get {
                return ResourceManager.GetString("cl_showdemooverlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dump entity list to console..
        /// </summary>
        internal static string cl_showents {
            get {
                return ResourceManager.GetString("cl_showents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show prediction errors, 2 for above plus detailed field deltas..
        /// </summary>
        internal static string cl_showerror {
            get {
                return ResourceManager.GetString("cl_showerror", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print event firing info in the console..
        /// </summary>
        internal static string cl_showevents {
            get {
                return ResourceManager.GetString("cl_showevents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1/2 - shows framerate (off/real-time/rounded)..
        /// </summary>
        internal static string cl_showfps {
            get {
                return ResourceManager.GetString("cl_showfps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 0 to not show on-screen help..
        /// </summary>
        internal static string cl_showhelp {
            get {
                return ResourceManager.GetString("cl_showhelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show the &apos;Paused&apos; image when game is paused..
        /// </summary>
        internal static string cl_showpausedimage {
            get {
                return ResourceManager.GetString("cl_showpausedimage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow plugins to display messages to you..
        /// </summary>
        internal static string cl_showpluginmessages {
            get {
                return ResourceManager.GetString("cl_showpluginmessages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - shows the map coordinates and movement speed of the player..
        /// </summary>
        internal static string cl_showpos {
            get {
                return ResourceManager.GetString("cl_showpos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable/disable text messages printing on the screen..
        /// </summary>
        internal static string cl_showtextmsg {
            get {
                return ResourceManager.GetString("cl_showtextmsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smooth view/eye origin after prediction errors..
        /// </summary>
        internal static string cl_smooth {
            get {
                return ResourceManager.GetString("cl_smooth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smooth client&apos;s view after prediction error over this many seconds..
        /// </summary>
        internal static string cl_smoothtime {
            get {
                return ResourceManager.GetString("cl_smoothtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flushes the sounds.txt system (client only)..
        /// </summary>
        internal static string cl_soundemitter_flush {
            get {
                return ResourceManager.GetString("cl_soundemitter_flush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jingle sound file..
        /// </summary>
        internal static string cl_soundfile {
            get {
                return ResourceManager.GetString("cl_soundfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flushes the client side soundscapes..
        /// </summary>
        internal static string cl_soundscape_flush {
            get {
                return ResourceManager.GetString("cl_soundscape_flush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print soundscapes..
        /// </summary>
        internal static string cl_soundscape_printdebuginfo {
            get {
                return ResourceManager.GetString("cl_soundscape_printdebuginfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows non-standard items being carried by player you&apos;re spectating..
        /// </summary>
        internal static string cl_spec_carrieditems {
            get {
                return ResourceManager.GetString("cl_spec_carrieditems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spectator mode..
        /// </summary>
        internal static string cl_spec_mode {
            get {
                return ResourceManager.GetString("cl_spec_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disallow the client to prefer official pro player names when available and omit weapon tags for spectators..
        /// </summary>
        internal static string cl_spec_use_tournament_content_standards {
            get {
                return ResourceManager.GetString("cl_spec_use_tournament_content_standards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable/disable saving screenshots to Steam..
        /// </summary>
        internal static string cl_steamscreenshots {
            get {
                return ResourceManager.GetString("cl_steamscreenshots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default team when joining a game..
        /// </summary>
        internal static string cl_team {
            get {
                return ResourceManager.GetString("cl_team", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disable set Team ID to Always On..
        /// </summary>
        internal static string cl_teamid_overhead_always {
            get {
                return ResourceManager.GetString("cl_teamid_overhead_always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable parallel processing of C_BaseAnimating::SetupBones()..
        /// </summary>
        internal static string cl_threaded_bone_setup {
            get {
                return ResourceManager.GetString("cl_threaded_bone_setup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After this many seconds without receiving a packet from the server, the client will disconnect itself..
        /// </summary>
        internal static string cl_timeout {
            get {
                return ResourceManager.GetString("cl_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trade with a person by player name..
        /// </summary>
        internal static string cl_trade {
            get {
                return ResourceManager.GetString("cl_trade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trade with a person by steam id..
        /// </summary>
        internal static string cl_trade_steamid {
            get {
                return ResourceManager.GetString("cl_trade_steamid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View trade requests from a certain group only..
        /// </summary>
        internal static string cl_trading_show_requests_from {
            get {
                return ResourceManager.GetString("cl_trading_show_requests_from", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlock all training..
        /// </summary>
        internal static string cl_training_class_unlock_all {
            get {
                return ResourceManager.GetString("cl_training_class_unlock_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bitfield representing what classes have been used to complete training..
        /// </summary>
        internal static string cl_training_completed_with_classes {
            get {
                return ResourceManager.GetString("cl_training_completed_with_classes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tries to accept/trigger the first notification..
        /// </summary>
        internal static string cl_trigger_first_notification {
            get {
                return ResourceManager.GetString("cl_trigger_first_notification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of packets per second of updates you are requesting from the server..
        /// </summary>
        internal static string cl_updaterate {
            get {
                return ResourceManager.GetString("cl_updaterate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When in tournament mode, use the advanced tournament spectator UI..
        /// </summary>
        internal static string cl_use_tournament_specgui {
            get {
                return ResourceManager.GetString("cl_use_tournament_specgui", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the view entity index..
        /// </summary>
        internal static string cl_view {
            get {
                return ResourceManager.GetString("cl_view", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter voice by name substring..
        /// </summary>
        internal static string cl_voice_filter {
            get {
                return ResourceManager.GetString("cl_voice_filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show accuracy debug information into game console..
        /// </summary>
        internal static string cl_weapon_debug_print_accuracy {
            get {
                return ResourceManager.GetString("cl_weapon_debug_print_accuracy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weather effects wind direction angle..
        /// </summary>
        internal static string cl_winddir {
            get {
                return ResourceManager.GetString("cl_winddir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weather effects wind speed scalar..
        /// </summary>
        internal static string cl_windspeed {
            get {
                return ResourceManager.GetString("cl_windspeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the speed at which your character turns when using the +left and +right commands..
        /// </summary>
        internal static string cl_yawspeed {
            get {
                return ResourceManager.GetString("cl_yawspeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect to server..
        /// </summary>
        internal static string connect {
            get {
                return ResourceManager.GetString("connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View complete cvar list..
        /// </summary>
        internal static string cvarlist {
            get {
                return ResourceManager.GetString("cvarlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brings up a toolbox for replays (Shift+F2 will also bring up the tool box)..
        /// </summary>
        internal static string demoui {
            get {
                return ResourceManager.GetString("demoui", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop the flag or intelligence..
        /// </summary>
        internal static string dropitem {
            get {
                return ResourceManager.GetString("dropitem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo support - will put all files into this folder under the gamedir. 24 characters max..
        /// </summary>
        internal static string ds_dir {
            get {
                return ResourceManager.GetString("ds_dir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo support - enable automatic .dem file recording and features: 0 - manual; 1 - auto-record competitive matches; 2 - auto-record all matches..
        /// </summary>
        internal static string ds_enable {
            get {
                return ResourceManager.GetString("ds_enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo support - maximum time between kills for tracking kill streaks..
        /// </summary>
        internal static string ds_kill_delay {
            get {
                return ResourceManager.GetString("ds_kill_delay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo support - log kill streak and bookmark events to an associated .txt file..
        /// </summary>
        internal static string ds_log {
            get {
                return ResourceManager.GetString("ds_log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bookmark the current demo tick count for future reference. The [comment] is an optional descriptor you may include..
        /// </summary>
        internal static string ds_mark {
            get {
                return ResourceManager.GetString("ds_mark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo support - minimum kill streak count before being recorded..
        /// </summary>
        internal static string ds_min_streak {
            get {
                return ResourceManager.GetString("ds_min_streak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo support - text output when recording start/stop/bookmark events : 0 - console; 1 - console and chat; 2 - console and HUD..
        /// </summary>
        internal static string ds_notify {
            get {
                return ResourceManager.GetString("ds_notify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo support - will prefix files with this string. 24 characters max..
        /// </summary>
        internal static string ds_prefix {
            get {
                return ResourceManager.GetString("ds_prefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo support - start recording a demo..
        /// </summary>
        internal static string ds_record {
            get {
                return ResourceManager.GetString("ds_record", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo support - show the current recording status..
        /// </summary>
        internal static string ds_status {
            get {
                return ResourceManager.GetString("ds_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Demo support - stop recording a demo.
        /// </summary>
        internal static string ds_stop {
            get {
                return ResourceManager.GetString("ds_stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops source recorder..
        /// </summary>
        internal static string endmovie {
            get {
                return ResourceManager.GetString("endmovie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute config file..
        /// </summary>
        internal static string exec {
            get {
                return ResourceManager.GetString("exec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit suicide by exploding into gibs..
        /// </summary>
        internal static string explode {
            get {
                return ResourceManager.GetString("explode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control how much penetration power and damage is scaled when hitting a friendly when FF is off..
        /// </summary>
        internal static string ff_damage_bullet_penetration {
            get {
                return ResourceManager.GetString("ff_damage_bullet_penetration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How much to reduce damage done to teammates when shot.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)..
        /// </summary>
        internal static string ff_damage_reduction_bullets {
            get {
                return ResourceManager.GetString("ff_damage_reduction_bullets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How much to reduce damage done to teammates by a thrown grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)..
        /// </summary>
        internal static string ff_damage_reduction_grenade {
            get {
                return ResourceManager.GetString("ff_damage_reduction_grenade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How much to damage a player does to himself with his own grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)..
        /// </summary>
        internal static string ff_damage_reduction_grenade_self {
            get {
                return ResourceManager.GetString("ff_damage_reduction_grenade_self", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How much to reduce damage done to teammates by things other than bullets and grenades.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)..
        /// </summary>
        internal static string ff_damage_reduction_other {
            get {
                return ResourceManager.GetString("ff_damage_reduction_other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to F search function that displays all commands with searched term..
        /// </summary>
        internal static string find {
            get {
                return ResourceManager.GetString("find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 70-90 - set desired field of view (higher values show more of the battlefield at the cost of fps)..
        /// </summary>
        internal static string fov_desired {
            get {
                return ResourceManager.GetString("fov_desired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tells the source recorder to record at a constant framerate..
        /// </summary>
        internal static string host_framerate {
            get {
                return ResourceManager.GetString("host_framerate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use in conjunction with host_framerate to produce a smooth video output..
        /// </summary>
        internal static string host_timescale {
            get {
                return ResourceManager.GetString("host_timescale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns the damage text above enemies off/on..
        /// </summary>
        internal static string hud_combattext {
            get {
                return ResourceManager.GetString("hud_combattext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the amount of healing done per second..
        /// </summary>
        internal static string hud_combattext_healing {
            get {
                return ResourceManager.GetString("hud_combattext_healing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this to fix various HUD-color errors or lingering Crit-effects..
        /// </summary>
        internal static string hud_reloadscheme {
            get {
                return ResourceManager.GetString("hud_reloadscheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deals given amount of damage (can be negative for extra health). Requires sv_cheats 1..
        /// </summary>
        internal static string hurtme {
            get {
                return ResourceManager.GetString("hurtme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force team (red/blue/auto/spectator). Use this if you are stuck in &quot;dead spectator&quot; mode when too many people attempt to join a team at the same time..
        /// </summary>
        internal static string jointeam {
            get {
                return ResourceManager.GetString("jointeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Take a jpeg screenshot..
        /// </summary>
        internal static string jpeg {
            get {
                return ResourceManager.GetString("jpeg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit suicide..
        /// </summary>
        internal static string kill {
            get {
                return ResourceManager.GetString("kill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload server logs to external server via HTTP POST method..
        /// </summary>
        internal static string logaddress_add_http {
            get {
                return ResourceManager.GetString("logaddress_add_http", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes the map and restarts the server..
        /// </summary>
        internal static string map {
            get {
                return ResourceManager.GetString("map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display list of maps..
        /// </summary>
        internal static string maps {
            get {
                return ResourceManager.GetString("maps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of money awared to every player after each round..
        /// </summary>
        internal static string mp_afterroundmoney {
            get {
                return ResourceManager.GetString("mp_afterroundmoney", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow NPCs on server..
        /// </summary>
        internal static string mp_allowNPCs {
            get {
                return ResourceManager.GetString("mp_allowNPCs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggles whether the server allows spectator mode or not..
        /// </summary>
        internal static string mp_allowspectators {
            get {
                return ResourceManager.GetString("mp_allowspectators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for automatic team balancing..
        /// </summary>
        internal static string mp_autoteambalance {
            get {
                return ResourceManager.GetString("mp_autoteambalance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time after round win until round restarts..
        /// </summary>
        internal static string mp_bonusroundtime {
            get {
                return ResourceManager.GetString("mp_bonusroundtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether or not grenades can be purchased from the buy menu..
        /// </summary>
        internal static string mp_buy_allow_grenades {
            get {
                return ResourceManager.GetString("mp_buy_allow_grenades", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many seconds after round start players can buy items for..
        /// </summary>
        internal static string mp_buytime {
            get {
                return ResourceManager.GetString("mp_buytime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of time players can chat after the game is over..
        /// </summary>
        internal static string mp_chattime {
            get {
                return ResourceManager.GetString("mp_chattime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text that team leader from each team must speak for the match to begin..
        /// </summary>
        internal static string mp_clan_ready_signal {
            get {
                return ResourceManager.GetString("mp_clan_ready_signal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If non-zero, game will restart once someone from each team gives the ready signal..
        /// </summary>
        internal static string mp_clan_readyrestart {
            get {
                return ResourceManager.GetString("mp_clan_readyrestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default grenades that the CTs will spawn with.  To give multiple grenades, separate each weapon class with a space like this: &apos;weapon_molotov weapon_hegrenade&apos;..
        /// </summary>
        internal static string mp_ct_default_grenades {
            get {
                return ResourceManager.GetString("mp_ct_default_grenades", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default melee weapon that the CTs will spawn with.  Even if this is blank, a knife will be given.  To give a taser, it should look like this: &apos;weapon_knife weapon_taser&apos;.  Remember to set mp_weapons_allow_zeus to 1 if you want to give a taser!.
        /// </summary>
        internal static string mp_ct_default_melee {
            get {
                return ResourceManager.GetString("mp_ct_default_melee", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default primary (rifle) weapon that the CTs will spawn with..
        /// </summary>
        internal static string mp_ct_default_primary {
            get {
                return ResourceManager.GetString("mp_ct_default_primary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default secondary (pistol) weapon that the CTs will spawn with..
        /// </summary>
        internal static string mp_ct_default_secondary {
            get {
                return ResourceManager.GetString("mp_ct_default_secondary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scales the damage a CT player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%).
        /// </summary>
        internal static string mp_damage_scale_ct_body {
            get {
                return ResourceManager.GetString("mp_damage_scale_ct_body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scales the damage a CT player takes by this much when they take damage in the head. (1 == 100%, 0.5 == 50%).
        /// </summary>
        internal static string mp_damage_scale_ct_head {
            get {
                return ResourceManager.GetString("mp_damage_scale_ct_head", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scales the damage a T player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%).
        /// </summary>
        internal static string mp_damage_scale_t_body {
            get {
                return ResourceManager.GetString("mp_damage_scale_t_body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scales the damage a T player takes by this much when they take damage in the head. (1 == 100%, 0.5 == 50%).
        /// </summary>
        internal static string mp_damage_scale_t_head {
            get {
                return ResourceManager.GetString("mp_damage_scale_t_head", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether a defuser drops from a player holding on when they die..
        /// </summary>
        internal static string mp_death_drop_defuser {
            get {
                return ResourceManager.GetString("mp_death_drop_defuser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which grenade to drop on player death: 0=none, 1=best, 2=current or best..
        /// </summary>
        internal static string mp_death_drop_grenade {
            get {
                return ResourceManager.GetString("mp_death_drop_grenade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which gun to drop on player death: 0=none, 1=best, 2=current or best..
        /// </summary>
        internal static string mp_death_drop_gun {
            get {
                return ResourceManager.GetString("mp_death_drop_gun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines whether a player can early-out of the deathcam..
        /// </summary>
        internal static string mp_deathcam_skippable {
            get {
                return ResourceManager.GetString("mp_deathcam_skippable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, the map will declare this team the winner when the round timer expires.  (-1 == map default, 0 == draw, 2 == Ts, 3 == CTs)..
        /// </summary>
        internal static string mp_default_team_winner_no_objective {
            get {
                return ResourceManager.GetString("mp_default_team_winner_no_objective", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How to allocate defusers to CTs at start or round: 0=none, 1=random, 2=everyone..
        /// </summary>
        internal static string mp_defuser_allocation {
            get {
                return ResourceManager.GetString("mp_defuser_allocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevents a userid from being auto-kicked..
        /// </summary>
        internal static string mp_disable_autokick {
            get {
                return ResourceManager.GetString("mp_disable_autokick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for respawn times..
        /// </summary>
        internal static string mp_disable_respawn_times {
            get {
                return ResourceManager.GetString("mp_disable_respawn_times", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether to display and score player assists..
        /// </summary>
        internal static string mp_display_kill_assists {
            get {
                return ResourceManager.GetString("mp_display_kill_assists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable timers to wait between rounds..
        /// </summary>
        internal static string mp_enableroundwaittime {
            get {
                return ResourceManager.GetString("mp_enableroundwaittime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fade a player&apos;s screen to black when he dies..
        /// </summary>
        internal static string mp_fadetoblack {
            get {
                return ResourceManager.GetString("mp_fadetoblack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of time a player has on the team screen to make a selection before being auto-teamed..
        /// </summary>
        internal static string mp_force_pick_time {
            get {
                return ResourceManager.GetString("mp_force_pick_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically assign players to teams when joining..
        /// </summary>
        internal static string mp_forceautoteam {
            get {
                return ResourceManager.GetString("mp_forceautoteam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restricts spectator modes for dead players..
        /// </summary>
        internal static string mp_forcecamera {
            get {
                return ResourceManager.GetString("mp_forcecamera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force all players to respawn..
        /// </summary>
        internal static string mp_forcerespawnplayers {
            get {
                return ResourceManager.GetString("mp_forcerespawnplayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forces team to win..
        /// </summary>
        internal static string mp_forcewin {
            get {
                return ResourceManager.GetString("mp_forcewin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of kills at which the map ends..
        /// </summary>
        internal static string mp_fraglimit {
            get {
                return ResourceManager.GetString("mp_fraglimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines whether armor and helmet are given automatically..
        /// </summary>
        internal static string mp_free_armor {
            get {
                return ResourceManager.GetString("mp_free_armor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many seconds to keep players frozen when the round starts..
        /// </summary>
        internal static string mp_freezetime {
            get {
                return ResourceManager.GetString("mp_freezetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows team members to injure other members of their team..
        /// </summary>
        internal static string mp_friendlyfire {
            get {
                return ResourceManager.GetString("mp_friendlyfire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether this map should spawn a c4 bomb for a player or not..
        /// </summary>
        internal static string mp_give_player_c4 {
            get {
                return ResourceManager.GetString("mp_give_player_c4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer..
        /// </summary>
        internal static string mp_halftime {
            get {
                return ResourceManager.GetString("mp_halftime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer..
        /// </summary>
        internal static string mp_halftime_pausetimer {
            get {
                return ResourceManager.GetString("mp_halftime_pausetimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow only 1 of each player class type..
        /// </summary>
        internal static string mp_highlander {
            get {
                return ResourceManager.GetString("mp_highlander", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 1 to prevent holiday gifts from spawning when players are killed..
        /// </summary>
        internal static string mp_holiday_nogifts {
            get {
                return ResourceManager.GetString("mp_holiday_nogifts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Terrorist are kicked for killing too much hostages..
        /// </summary>
        internal static string mp_hostagepenalty {
            get {
                return ResourceManager.GetString("mp_hostagepenalty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the maximum number of hostages to spawn..
        /// </summary>
        internal static string mp_hostages_max {
            get {
                return ResourceManager.GetString("mp_hostages_max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting 0 removes the time extension when CTs pick up the first hostage..
        /// </summary>
        internal static string mp_hostages_rescuetime {
            get {
                return ResourceManager.GetString("mp_hostages_rescuetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting 1 forces hostage spawn points to choose be the farthest possible combinations..
        /// </summary>
        internal static string mp_hostages_spawn_farthest {
            get {
                return ResourceManager.GetString("mp_hostages_spawn_farthest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting a comma separate list (ex: 0,2 ) forces specific hostage spawn point combinations..
        /// </summary>
        internal static string mp_hostages_spawn_force_positions {
            get {
                return ResourceManager.GetString("mp_hostages_spawn_force_positions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting 0 randomizes the hostage spawn points every round..
        /// </summary>
        internal static string mp_hostages_spawn_same_every_round {
            get {
                return ResourceManager.GetString("mp_hostages_spawn_same_every_round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting 0 allows hostages to be hurt..
        /// </summary>
        internal static string mp_hostages_takedamage {
            get {
                return ResourceManager.GetString("mp_hostages_takedamage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restricts human players to a single team {any, blue, red, spectator}..
        /// </summary>
        internal static string mp_humans_must_join_team {
            get {
                return ResourceManager.GetString("mp_humans_must_join_team", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for managing idle players..
        /// </summary>
        internal static string mp_idledealmethod {
            get {
                return ResourceManager.GetString("mp_idledealmethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum time a player is allowed to be idle (in minutes)..
        /// </summary>
        internal static string mp_idlemaxtime {
            get {
                return ResourceManager.GetString("mp_idlemaxtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma-separated list of forbidden on CS:GO server items..
        /// </summary>
        internal static string mp_items_prohibited {
            get {
                return ResourceManager.GetString("mp_items_prohibited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max # of players 1 team can have over another (0 disables check)..
        /// </summary>
        internal static string mp_limitteams {
            get {
                return ResourceManager.GetString("mp_limitteams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logs&apos; detail of dedicated CS:GO server..
        /// </summary>
        internal static string mp_logdetail {
            get {
                return ResourceManager.GetString("mp_logdetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0=No mercy rule, 1=team can clinch match win early if they win &gt; 1/2 total rounds..
        /// </summary>
        internal static string mp_match_can_clinch {
            get {
                return ResourceManager.GetString("mp_match_can_clinch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow the match to end when mp_timelimit hits instead of waiting for the end of the current round..
        /// </summary>
        internal static string mp_match_end_at_timelimit {
            get {
                return ResourceManager.GetString("mp_match_end_at_timelimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum amount of money allowed in a player&apos;s account..
        /// </summary>
        internal static string mp_maxmoney {
            get {
                return ResourceManager.GetString("mp_maxmoney", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max number of rounds to play before server changes maps..
        /// </summary>
        internal static string mp_maxrounds {
            get {
                return ResourceManager.GetString("mp_maxrounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of seconds to delay before the molotov can be used after acquiring it..
        /// </summary>
        internal static string mp_molotovusedelay {
            get {
                return ResourceManager.GetString("mp_molotovusedelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Players can earn money by performing in-game actions..
        /// </summary>
        internal static string mp_playercashawards {
            get {
                return ResourceManager.GetString("mp_playercashawards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines who should see all in the radar. 0 = default. 1 = both teams. 2 = Terrorists. 3 = CTs..
        /// </summary>
        internal static string mp_radar_showall {
            get {
                return ResourceManager.GetString("mp_radar_showall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs..
        /// </summary>
        internal static string mp_randomspawn {
            get {
                return ResourceManager.GetString("mp_randomspawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many seconds after respawn immunity lasts..
        /// </summary>
        internal static string mp_respawn_immunitytime {
            get {
                return ResourceManager.GetString("mp_respawn_immunitytime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When set to 1, counter-terrorists will respawn after dying..
        /// </summary>
        internal static string mp_respawn_on_death_ct {
            get {
                return ResourceManager.GetString("mp_respawn_on_death_ct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When set to 1, terrorists will respawn after dying..
        /// </summary>
        internal static string mp_respawn_on_death_t {
            get {
                return ResourceManager.GetString("mp_respawn_on_death_t", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time between respawn waves..
        /// </summary>
        internal static string mp_respawnwavetime {
            get {
                return ResourceManager.GetString("mp_respawnwavetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time between respawn waves for CTs..
        /// </summary>
        internal static string mp_respawnwavetime_ct {
            get {
                return ResourceManager.GetString("mp_respawnwavetime_ct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time between respawn waves for Terrorists..
        /// </summary>
        internal static string mp_respawnwavetime_t {
            get {
                return ResourceManager.GetString("mp_respawnwavetime_t", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarts the round and resets the round time..
        /// </summary>
        internal static string mp_restartgame {
            get {
                return ResourceManager.GetString("mp_restartgame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If non-zero, game will restart immediately..
        /// </summary>
        internal static string mp_restartgame_immediate {
            get {
                return ResourceManager.GetString("mp_restartgame_immediate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If non-zero, the current round will restart in the specified number of seconds..
        /// </summary>
        internal static string mp_restartround {
            get {
                return ResourceManager.GetString("mp_restartround", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many minutes each round takes..
        /// </summary>
        internal static string mp_roundtime {
            get {
                return ResourceManager.GetString("mp_roundtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many minutes each round of Bomb Defuse takes..
        /// </summary>
        internal static string mp_roundtime_defuse {
            get {
                return ResourceManager.GetString("mp_roundtime_defuse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many minutes each round of Hostage Rescue takes..
        /// </summary>
        internal static string mp_roundtime_hostage {
            get {
                return ResourceManager.GetString("mp_roundtime_hostage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scramble the teams and restart the game..
        /// </summary>
        internal static string mp_scrambleteams {
            get {
                return ResourceManager.GetString("mp_scrambleteams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server will automatically scramble the teams if criteria met. Only works on dedicated servers..
        /// </summary>
        internal static string mp_scrambleteams_auto {
            get {
                return ResourceManager.GetString("mp_scrambleteams_auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of round wins a team must lead by in order to trigger an auto scramble..
        /// </summary>
        internal static string mp_scrambleteams_auto_windifference {
            get {
                return ResourceManager.GetString("mp_scrambleteams_auto_windifference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show overhead player voice icons when players are speaking..
        /// </summary>
        internal static string mp_show_voice_icons {
            get {
                return ResourceManager.GetString("mp_show_voice_icons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show the min respawn times for the teams..
        /// </summary>
        internal static string mp_showrespawntimes {
            get {
                return ResourceManager.GetString("mp_showrespawntimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines whether teammates are solid or not..
        /// </summary>
        internal static string mp_solid_teammates {
            get {
                return ResourceManager.GetString("mp_solid_teammates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lets you swap the default player side position manually (CTs on right and T&apos;s on left)..
        /// </summary>
        internal static string mp_spec_swapplayersides {
            get {
                return ResourceManager.GetString("mp_spec_swapplayersides", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable/Disable stalemate mode..
        /// </summary>
        internal static string mp_stalemate_enable {
            get {
                return ResourceManager.GetString("mp_stalemate_enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restrict everyone to melee weapons only while in Sudden Death..
        /// </summary>
        internal static string mp_stalemate_meleeonly {
            get {
                return ResourceManager.GetString("mp_stalemate_meleeonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timelimit (in seconds) of the stalemate round..
        /// </summary>
        internal static string mp_stalemate_timelimit {
            get {
                return ResourceManager.GetString("mp_stalemate_timelimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of money each player starts with on match start, half start or reset..
        /// </summary>
        internal static string mp_startmoney {
            get {
                return ResourceManager.GetString("mp_startmoney", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch teams and restart the game..
        /// </summary>
        internal static string mp_switchteams {
            get {
                return ResourceManager.GetString("mp_switchteams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default grenades that the CTs will spawn with.  To give multiple grenades, separate each weapon class with a space like this: &apos;weapon_molotov weapon_hegrenade&apos;..
        /// </summary>
        internal static string mp_t_default_grenades {
            get {
                return ResourceManager.GetString("mp_t_default_grenades", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default melee weapon that the Ts will spawn with.  Even if this is blank, a knife will be given.  To give a taser, it should look like this: &apos;weapon_knife weapon_taser&apos;.  Remember to set mp_weapons_allow_zeus to 1 if you want to give a taser!.
        /// </summary>
        internal static string mp_t_default_melee {
            get {
                return ResourceManager.GetString("mp_t_default_melee", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default primary (rifle) weapon that the Ts will spawn with..
        /// </summary>
        internal static string mp_t_default_primary {
            get {
                return ResourceManager.GetString("mp_t_default_primary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default secondary (pistol) weapon that the Ts will spawn with..
        /// </summary>
        internal static string mp_t_default_secondary {
            get {
                return ResourceManager.GetString("mp_t_default_secondary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teams can earn money by performing in-game actions..
        /// </summary>
        internal static string mp_teamcashawards {
            get {
                return ResourceManager.GetString("mp_teamcashawards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set team logo for Team 1..
        /// </summary>
        internal static string mp_teamlogo_1 {
            get {
                return ResourceManager.GetString("mp_teamlogo_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set team logo for Team 2..
        /// </summary>
        internal static string mp_teamlogo_2 {
            get {
                return ResourceManager.GetString("mp_teamlogo_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When set, your teammates act as enemies and all players are valid targets..
        /// </summary>
        internal static string mp_teammates_are_enemies {
            get {
                return ResourceManager.GetString("mp_teammates_are_enemies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for team force balance..
        /// </summary>
        internal static string mp_teams_unbalance_limit {
            get {
                return ResourceManager.GetString("mp_teams_unbalance_limit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay between scoring of owned capture points..
        /// </summary>
        internal static string mp_time_between_capscoring {
            get {
                return ResourceManager.GetString("mp_time_between_capscoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for map timelimit..
        /// </summary>
        internal static string mp_timelimit {
            get {
                return ResourceManager.GetString("mp_timelimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable/Disable Tournament mode..
        /// </summary>
        internal static string mp_tournament {
            get {
                return ResourceManager.GetString("mp_tournament", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow mp_tournament_restart command to be issued by players other than admin..
        /// </summary>
        internal static string mp_tournament_allow_non_admin_restart {
            get {
                return ResourceManager.GetString("mp_tournament_allow_non_admin_restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows tournament mode to use a per-player ready system..
        /// </summary>
        internal static string mp_tournament_readymode {
            get {
                return ResourceManager.GetString("mp_tournament_readymode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of seconds before a match begins when both teams are ready..
        /// </summary>
        internal static string mp_tournament_readymode_countdown {
            get {
                return ResourceManager.GetString("mp_tournament_readymode_countdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum number of players required on the server before players can toggle ready status..
        /// </summary>
        internal static string mp_tournament_readymode_min {
            get {
                return ResourceManager.GetString("mp_tournament_readymode_min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum number of players required to be ready per-team before the game can begin..
        /// </summary>
        internal static string mp_tournament_readymode_team_size {
            get {
                return ResourceManager.GetString("mp_tournament_readymode_team_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart Tournament Mode on the current level..
        /// </summary>
        internal static string mp_tournament_restart {
            get {
                return ResourceManager.GetString("mp_tournament_restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the item whitelist file to use..
        /// </summary>
        internal static string mp_tournament_whitelist {
            get {
                return ResourceManager.GetString("mp_tournament_whitelist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When set to 1, and that player&apos;s team is set to respawn, they will respawn in waves..
        /// </summary>
        internal static string mp_use_respawn_waves {
            get {
                return ResourceManager.GetString("mp_use_respawn_waves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 - makes use of the high-polygon class models used in the &apos;Meet the Team&apos; videos..
        /// </summary>
        internal static string mp_usehwmmodels {
            get {
                return ResourceManager.GetString("mp_usehwmmodels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 - makes use of the high-polygon class models used in the &apos;Meet the Team&apos; videos..
        /// </summary>
        internal static string mp_usehwmvcds {
            get {
                return ResourceManager.GetString("mp_usehwmvcds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 1 to end the WaitingForPlayers period..
        /// </summary>
        internal static string mp_waitingforplayers_cancel {
            get {
                return ResourceManager.GetString("mp_waitingforplayers_cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 1 to start or restart the WaitingForPlayers period..
        /// </summary>
        internal static string mp_waitingforplayers_restart {
            get {
                return ResourceManager.GetString("mp_waitingforplayers_restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 - cancels &quot;waiting for players...&quot; time..
        /// </summary>
        internal static string mp_waitingforplayerscancel {
            get {
                return ResourceManager.GetString("mp_waitingforplayerscancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer..
        /// </summary>
        internal static string mp_warmup_pausetimer {
            get {
                return ResourceManager.GetString("mp_warmup_pausetimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long the warmup period lasts. Changing this value resets warmup..
        /// </summary>
        internal static string mp_warmuptime {
            get {
                return ResourceManager.GetString("mp_warmuptime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this convar is set, when a match starts, the game will not delete weapons placed in the map..
        /// </summary>
        internal static string mp_weapons_allow_map_placed {
            get {
                return ResourceManager.GetString("mp_weapons_allow_map_placed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines whether the Zeus is purchasable or not..
        /// </summary>
        internal static string mp_weapons_allow_zeus {
            get {
                return ResourceManager.GetString("mp_weapons_allow_zeus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If this convar is set, weapons on the ground will have a glow around them and can be seen through walls..
        /// </summary>
        internal static string mp_weapons_glow_on_ground {
            get {
                return ResourceManager.GetString("mp_weapons_glow_on_ground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Score difference between teams before server changes maps..
        /// </summary>
        internal static string mp_windifference {
            get {
                return ResourceManager.GetString("mp_windifference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum score needed for mp_windifference to be applied..
        /// </summary>
        internal static string mp_windifference_min {
            get {
                return ResourceManager.GetString("mp_windifference_min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max score one team can reach before server changes maps..
        /// </summary>
        internal static string mp_winlimit {
            get {
                return ResourceManager.GetString("mp_winlimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Depending on the input value, different amounts of information will be shown such as ping, fps, lerp, packet loss, etc..
        /// </summary>
        internal static string net_graph {
            get {
                return ResourceManager.GetString("net_graph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the next map to be played..
        /// </summary>
        internal static string nextlevel {
            get {
                return ResourceManager.GetString("nextlevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable the drawing of first person bullet tracer particles..
        /// </summary>
        internal static string r_drawtracers_firstperson {
            get {
                return ResourceManager.GetString("r_drawtracers_firstperson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turns viewmodels on and off..
        /// </summary>
        internal static string r_drawviewmodel {
            get {
                return ResourceManager.GetString("r_drawviewmodel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes an rcon command..
        /// </summary>
        internal static string rcon {
            get {
                return ResourceManager.GetString("rcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the server address to send rcon commands to (if not set, console sends the command to the server that the player is currently in instead)..
        /// </summary>
        internal static string rcon_address {
            get {
                return ResourceManager.GetString("rcon_address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gives player access to rcon commands..
        /// </summary>
        internal static string rcon_password {
            get {
                return ResourceManager.GetString("rcon_password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Records a demo..
        /// </summary>
        internal static string record {
            get {
                return ResourceManager.GetString("record", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can be used to send clients to a different server. Does not function for clients that came from matchmaking or certain server browser tabs..
        /// </summary>
        internal static string redirect {
            get {
                return ResourceManager.GetString("redirect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarts the current server..
        /// </summary>
        internal static string restart {
            get {
                return ResourceManager.GetString("restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry connection to last server..
        /// </summary>
        internal static string retry {
            get {
                return ResourceManager.GetString("retry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open global chat window..
        /// </summary>
        internal static string say {
            get {
                return ResourceManager.GetString("say", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open party chat window..
        /// </summary>
        internal static string say_party {
            get {
                return ResourceManager.GetString("say_party", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open team chat window..
        /// </summary>
        internal static string say_team {
            get {
                return ResourceManager.GetString("say_team", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable asynchronous audio mixing..
        /// </summary>
        internal static string snd_mix_async {
            get {
                return ResourceManager.GetString("snd_mix_async", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable new sound occlusion on CS:GO..
        /// </summary>
        internal static string snd_occlusion {
            get {
                return ResourceManager.GetString("snd_occlusion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time spent with the freeze panel still up after observer freeze cam is done..
        /// </summary>
        internal static string spec_freeze_panel_extended_time {
            get {
                return ResourceManager.GetString("spec_freeze_panel_extended_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time spend frozen in observer freeze cam..
        /// </summary>
        internal static string spec_freeze_time {
            get {
                return ResourceManager.GetString("spec_freeze_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When set, will lock the observer target to the specified SteamID64 player. The lock can be set regardless of whether or not the player is currently connected..
        /// </summary>
        internal static string spec_lock_to_accountid {
            get {
                return ResourceManager.GetString("spec_lock_to_accountid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switches observer target to the player with SteamID64 passed as argument..
        /// </summary>
        internal static string spec_player_by_accountid {
            get {
                return ResourceManager.GetString("spec_player_by_accountid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens up the source recorder during demo play back and allows for high quality avi format recording..
        /// </summary>
        internal static string startmovie {
            get {
                return ResourceManager.GetString("startmovie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display map and connection status..
        /// </summary>
        internal static string status {
            get {
                return ResourceManager.GetString("status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable Steam Controller haptics..
        /// </summary>
        internal static string steam_controller_haptics {
            get {
                return ResourceManager.GetString("steam_controller_haptics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops the recording of a demo..
        /// </summary>
        internal static string stop {
            get {
                return ResourceManager.GetString("stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow or disallow clients to use color correction on this server..
        /// </summary>
        internal static string sv_allow_color_correction {
            get {
                return ResourceManager.GetString("sv_allow_color_correction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disallow command execution received from connected clients..
        /// </summary>
        internal static string sv_allow_legacy_cmd_execution_from_client {
            get {
                return ResourceManager.GetString("sv_allow_legacy_cmd_execution_from_client", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable point_servercommand entities. Defaults to &quot;official&quot; Valve maps only. Can also be set to &quot;disallow&quot; and &quot;always&quot;..
        /// </summary>
        internal static string sv_allow_point_servercommand {
            get {
                return ResourceManager.GetString("sv_allow_point_servercommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow or disallow clients from using voice_inputfromfile on this server..
        /// </summary>
        internal static string sv_allow_voice_from_file {
            get {
                return ResourceManager.GetString("sv_allow_voice_from_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow voting?.
        /// </summary>
        internal static string sv_allow_votes {
            get {
                return ResourceManager.GetString("sv_allow_votes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow or disallow the wait command on clients connected to this server..
        /// </summary>
        internal static string sv_allow_wait_command {
            get {
                return ResourceManager.GetString("sv_allow_wait_command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow clients to download files..
        /// </summary>
        internal static string sv_allowdownload {
            get {
                return ResourceManager.GetString("sv_allowdownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow clients to upload customizations files..
        /// </summary>
        internal static string sv_allowupload {
            get {
                return ResourceManager.GetString("sv_allowupload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Players can hear all other players, no team restrictions..
        /// </summary>
        internal static string sv_alltalk {
            get {
                return ResourceManager.GetString("sv_alltalk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, server only simulates entities on even numbered ticks..
        /// </summary>
        internal static string sv_alternateticks {
            get {
                return ResourceManager.GetString("sv_alternateticks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holding +jump causes players to automatically re-jump at the exact landing tick..
        /// </summary>
        internal static string sv_autobunnyhopping {
            get {
                return ResourceManager.GetString("sv_autobunnyhopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 1 to autosave game on level transition. Does not affect autosave triggers..
        /// </summary>
        internal static string sv_autosave {
            get {
                return ResourceManager.GetString("sv_autosave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If running a benchmark and this is set, it will record a vprof file over the duration of the benchmark with filename benchmark..
        /// </summary>
        internal static string sv_benchmark_autovprofrecord {
            get {
                return ResourceManager.GetString("sv_benchmark_autovprofrecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force start the benchmark. This is only for debugging. It&apos;s better to set sv_benchmark to 1 and restart the level..
        /// </summary>
        internal static string sv_benchmark_force_start {
            get {
                return ResourceManager.GetString("sv_benchmark_force_start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow the local player to move freely in the benchmark. Only used for debugging..
        /// </summary>
        internal static string sv_benchmark_freeroam {
            get {
                return ResourceManager.GetString("sv_benchmark_freeroam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If &gt; 0, then it only runs the benchmark for this # of ticks..
        /// </summary>
        internal static string sv_benchmark_numticks {
            get {
                return ResourceManager.GetString("sv_benchmark_numticks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to values other than 0 to select a bonus map challenge type..
        /// </summary>
        internal static string sv_bonus_challenge {
            get {
                return ResourceManager.GetString("sv_bonus_challenge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates a bonus map challenge score..
        /// </summary>
        internal static string sv_bonus_map_challenge_update {
            get {
                return ResourceManager.GetString("sv_bonus_map_challenge_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completes a bonus map..
        /// </summary>
        internal static string sv_bonus_map_complete {
            get {
                return ResourceManager.GetString("sv_bonus_map_complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locks a bonus map..
        /// </summary>
        internal static string sv_bonus_map_unlock {
            get {
                return ResourceManager.GetString("sv_bonus_map_unlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bounce multiplier for when physically simulated objects collide with other objects..
        /// </summary>
        internal static string sv_bounce {
            get {
                return ResourceManager.GetString("sv_bounce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to 1, does an optimization to prevent extra SendTable_Encode calls..
        /// </summary>
        internal static string sv_cacheencodedents {
            get {
                return ResourceManager.GetString("sv_cacheencodedents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns cheats off/on..
        /// </summary>
        internal static string sv_cheats {
            get {
                return ResourceManager.GetString("sv_cheats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added logic to prevent airstalling (where a player appears to float in midair by disrupting their network stream). Вisable to support surfing, etc..
        /// </summary>
        internal static string sv_clamp_unsafe_velocities {
            get {
                return ResourceManager.GetString("sv_clamp_unsafe_velocities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear memory of server side hints displayed to the player..
        /// </summary>
        internal static string sv_clearhinthistory {
            get {
                return ResourceManager.GetString("sv_clearhinthistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cl_cmdrate is moved to within sv_client_cmdrate_difference units of cl_updaterate before it is clamped between sv_mincmdrate and sv_maxcmdrate..
        /// </summary>
        internal static string sv_client_cmdrate_difference {
            get {
                return ResourceManager.GetString("sv_client_cmdrate_difference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected)..
        /// </summary>
        internal static string sv_client_max_interp_ratio {
            get {
                return ResourceManager.GetString("sv_client_max_interp_ratio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This can be used to limit the value of cl_interp_ratio for connected clients (only while they are connected)..
        /// </summary>
        internal static string sv_client_min_interp_ratio {
            get {
                return ResourceManager.GetString("sv_client_min_interp_ratio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This can be used to force the value of cl_predict for connected clients (only while they are connected)..
        /// </summary>
        internal static string sv_client_predict {
            get {
                return ResourceManager.GetString("sv_client_predict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server tries to keep each player&apos;s m_nTickBase withing this many msecs of the server absolute tickcount..
        /// </summary>
        internal static string sv_clockcorrection_msecs {
            get {
                return ResourceManager.GetString("sv_clockcorrection_msecs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the server enforces file consistency for critical files..
        /// </summary>
        internal static string sv_consistency {
            get {
                return ResourceManager.GetString("sv_consistency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contact email for server sysop..
        /// </summary>
        internal static string sv_contact {
            get {
                return ResourceManager.GetString("sv_contact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When set, dead players can speak (voice, text) to the living..
        /// </summary>
        internal static string sv_deadtalk {
            get {
                return ResourceManager.GetString("sv_deadtalk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visualizes +use logic. Green cross=trace success, Red cross=trace too far, Green box=radius success..
        /// </summary>
        internal static string sv_debug_player_use {
            get {
                return ResourceManager.GetString("sv_debug_player_use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure entities correctly report whether or not their network data has changed..
        /// </summary>
        internal static string sv_debugmanualmode {
            get {
                return ResourceManager.GetString("sv_debugmanualmode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show temp entity bandwidth usage..
        /// </summary>
        internal static string sv_debugtempentities {
            get {
                return ResourceManager.GetString("sv_debugtempentities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print accumulated CalcDelta profiling data (only if sv_deltatime is on)..
        /// </summary>
        internal static string sv_deltaprint {
            get {
                return ResourceManager.GetString("sv_deltaprint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable profiling of CalcDelta calls..
        /// </summary>
        internal static string sv_deltatime {
            get {
                return ResourceManager.GetString("sv_deltatime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable MOTD window after connecting to this server..
        /// </summary>
        internal static string sv_disable_motd {
            get {
                return ResourceManager.GetString("sv_disable_motd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug - disable trace query cache..
        /// </summary>
        internal static string sv_disable_querycache {
            get {
                return ResourceManager.GetString("sv_disable_querycache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location from which clients can download missing files..
        /// </summary>
        internal static string sv_downloadurl {
            get {
                return ResourceManager.GetString("sv_downloadurl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable the air-velocity clamping to 110% of maximum running speed..
        /// </summary>
        internal static string sv_enablebunnyhopping {
            get {
                return ResourceManager.GetString("sv_enablebunnyhopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable support for old style (HL1) server queries..
        /// </summary>
        internal static string sv_enableoldqueries {
            get {
                return ResourceManager.GetString("sv_enableoldqueries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set packet filtering by IP mode..
        /// </summary>
        internal static string sv_filterban {
            get {
                return ResourceManager.GetString("sv_filterban", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force server side preloading..
        /// </summary>
        internal static string sv_forcepreload {
            get {
                return ResourceManager.GetString("sv_forcepreload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to World gravity..
        /// </summary>
        internal static string sv_gravity {
            get {
                return ResourceManager.GetString("sv_gravity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn off Fire in the hole messages..
        /// </summary>
        internal static string sv_ignoregrenaderadio {
            get {
                return ResourceManager.GetString("sv_ignoregrenaderadio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls initial upward speed of jumps..
        /// </summary>
        internal static string sv_jump_impulse {
            get {
                return ResourceManager.GetString("sv_jump_impulse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0 - allow all players to play on game server. 1 - kick players with official assigned violation. 2 - kick players with any competitive cooldown..
        /// </summary>
        internal static string sv_kick_players_with_cooldown {
            get {
                return ResourceManager.GetString("sv_kick_players_with_cooldown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for local area network..
        /// </summary>
        internal static string sv_lan {
            get {
                return ResourceManager.GetString("sv_lan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log server information to only one file..
        /// </summary>
        internal static string sv_log_onefile {
            get {
                return ResourceManager.GetString("sv_log_onefile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log server bans in the server logs..
        /// </summary>
        internal static string sv_logbans {
            get {
                return ResourceManager.GetString("sv_logbans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If true when log when a query is blocked (can cause very large log files)..
        /// </summary>
        internal static string sv_logblocks {
            get {
                return ResourceManager.GetString("sv_logblocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Echo log information to the console..
        /// </summary>
        internal static string sv_logecho {
            get {
                return ResourceManager.GetString("sv_logecho", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log server information in the log file..
        /// </summary>
        internal static string sv_logfile {
            get {
                return ResourceManager.GetString("sv_logfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flush the log file to disk on each write (slow)..
        /// </summary>
        internal static string sv_logflush {
            get {
                return ResourceManager.GetString("sv_logflush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder in the game directory where server logs will be stored..
        /// </summary>
        internal static string sv_logsdir {
            get {
                return ResourceManager.GetString("sv_logsdir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set then include this secret when doing UDP logging (will use 0x53 as packet type, not usual 0x52)..
        /// </summary>
        internal static string sv_logsecret {
            get {
                return ResourceManager.GetString("sv_logsecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0 - no action, 1 - warn to log file, 2 - attempt to restart the game, if applicable, 3 - restart the map, 4 - go to the next map..
        /// </summary>
        internal static string sv_lowedict_action {
            get {
                return ResourceManager.GetString("sv_lowedict_action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When only this many edicts are free, take the action specified by sv_lowedict_action..
        /// </summary>
        internal static string sv_lowedict_threshold {
            get {
                return ResourceManager.GetString("sv_lowedict_threshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the game&apos;s socket to communicate to the master server..
        /// </summary>
        internal static string sv_master_share_game_socket {
            get {
                return ResourceManager.GetString("sv_master_share_game_socket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum connections per second to respond to from a single IP address..
        /// </summary>
        internal static string sv_max_connects_sec {
            get {
                return ResourceManager.GetString("sv_max_connects_sec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum connections per second to respond to from anywhere..
        /// </summary>
        internal static string sv_max_connects_sec_global {
            get {
                return ResourceManager.GetString("sv_max_connects_sec_global", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Window over which to average connections per second averages..
        /// </summary>
        internal static string sv_max_connects_window {
            get {
                return ResourceManager.GetString("sv_max_connects_window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum queries per second to respond to from a single IP address..
        /// </summary>
        internal static string sv_max_queries_sec {
            get {
                return ResourceManager.GetString("sv_max_queries_sec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum queries per second to respond to from anywhere..
        /// </summary>
        internal static string sv_max_queries_sec_global {
            get {
                return ResourceManager.GetString("sv_max_queries_sec_global", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Window over which to average queries per second averages..
        /// </summary>
        internal static string sv_max_queries_window {
            get {
                return ResourceManager.GetString("sv_max_queries_window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevents clients from running usercmds too far in the future. Prevents speed hacks..
        /// </summary>
        internal static string sv_max_usercmd_future_ticks {
            get {
                return ResourceManager.GetString("sv_max_usercmd_future_ticks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (If sv_mincmdrate is &gt; 0), this sets the maximum value for cl_cmdrate..
        /// </summary>
        internal static string sv_maxcmdrate {
            get {
                return ResourceManager.GetString("sv_maxcmdrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max bandwidth rate allowed on server, 0 == unlimited..
        /// </summary>
        internal static string sv_maxrate {
            get {
                return ResourceManager.GetString("sv_maxrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum replay time in seconds..
        /// </summary>
        internal static string sv_maxreplay {
            get {
                return ResourceManager.GetString("sv_maxreplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server upper bound on net_maxroutable that a client can use..
        /// </summary>
        internal static string sv_maxroutable {
            get {
                return ResourceManager.GetString("sv_maxroutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum updates per second that the server will allow..
        /// </summary>
        internal static string sv_maxupdaterate {
            get {
                return ResourceManager.GetString("sv_maxupdaterate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, whenever the server is empty, if the total memory used by the server is greater than this # of megabytes..
        /// </summary>
        internal static string sv_memlimit {
            get {
                return ResourceManager.GetString("sv_memlimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sets the minimum value for cl_cmdrate. 0 == unlimited..
        /// </summary>
        internal static string sv_mincmdrate {
            get {
                return ResourceManager.GetString("sv_mincmdrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Min bandwidth rate allowed on server, 0 == unlimited..
        /// </summary>
        internal static string sv_minrate {
            get {
                return ResourceManager.GetString("sv_minrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum updates per second that the server will allow..
        /// </summary>
        internal static string sv_minupdaterate {
            get {
                return ResourceManager.GetString("sv_minupdaterate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow server ops to control the default behavior of their MOTD..
        /// </summary>
        internal static string sv_motd_unload_on_dismissal {
            get {
                return ResourceManager.GetString("sv_motd_unload_on_dismissal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When a client name change is received, wait N seconds allowing another name change..
        /// </summary>
        internal static string sv_namechange_cooldown_seconds {
            get {
                return ResourceManager.GetString("sv_namechange_cooldown_seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, the server will dump a netspike trace if a client is dropped due to reliable snapshot overflow..
        /// </summary>
        internal static string sv_netspike_on_reliable_snapshot_overflow {
            get {
                return ResourceManager.GetString("sv_netspike_on_reliable_snapshot_overflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.)..
        /// </summary>
        internal static string sv_noclipduringpause {
            get {
                return ResourceManager.GetString("sv_noclipduringpause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NPCs over this distance from the player won&apos;t attempt to speak..
        /// </summary>
        internal static string sv_npc_talker_maxdist {
            get {
                return ResourceManager.GetString("sv_npc_talker_maxdist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server password for entry into multiplayer games..
        /// </summary>
        internal static string sv_password {
            get {
                return ResourceManager.GetString("sv_password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is the server pausable..
        /// </summary>
        internal static string sv_pausable {
            get {
                return ResourceManager.GetString("sv_pausable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of samples to maintain in player perf history..
        /// </summary>
        internal static string sv_playerperfhistorycount {
            get {
                return ResourceManager.GetString("sv_playerperfhistorycount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show precache info..
        /// </summary>
        internal static string sv_precacheinfo {
            get {
                return ResourceManager.GetString("sv_precacheinfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cvar for managing custom content..
        /// </summary>
        internal static string sv_pure {
            get {
                return ResourceManager.GetString("sv_pure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client..
        /// </summary>
        internal static string sv_pure_kick_clients {
            get {
                return ResourceManager.GetString("sv_pure_kick_clients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to 1, the server will print a message whenever a client is verifying a CRC for a file..
        /// </summary>
        internal static string sv_pure_trace {
            get {
                return ResourceManager.GetString("sv_pure_trace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skips SetupBones when npc&apos;s are outside the PVS..
        /// </summary>
        internal static string sv_pvsskipanimation {
            get {
                return ResourceManager.GetString("sv_pvsskipanimation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display status of the query cache (client only)..
        /// </summary>
        internal static string sv_querycache_stats {
            get {
                return ResourceManager.GetString("sv_querycache_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of minutes to ban users who fail rcon authentication..
        /// </summary>
        internal static string sv_rcon_banpenalty {
            get {
                return ResourceManager.GetString("sv_rcon_banpenalty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable/disable rcon logging..
        /// </summary>
        internal static string sv_rcon_log {
            get {
                return ResourceManager.GetString("sv_rcon_log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max number of times a user can fail rcon authentication before being banned..
        /// </summary>
        internal static string sv_rcon_maxfailures {
            get {
                return ResourceManager.GetString("sv_rcon_maxfailures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ban IPs for sending RCON packets exceeding the value specified in sv_rcon_maxpacketsize..
        /// </summary>
        internal static string sv_rcon_maxpacketbans {
            get {
                return ResourceManager.GetString("sv_rcon_maxpacketbans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of bytes to allow in a command packet..
        /// </summary>
        internal static string sv_rcon_maxpacketsize {
            get {
                return ResourceManager.GetString("sv_rcon_maxpacketsize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of times a user can fail rcon authentication in sv_rcon_minfailuretime before being banned..
        /// </summary>
        internal static string sv_rcon_minfailures {
            get {
                return ResourceManager.GetString("sv_rcon_minfailures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of seconds to track failed rcon authentications..
        /// </summary>
        internal static string sv_rcon_minfailuretime {
            get {
                return ResourceManager.GetString("sv_rcon_minfailuretime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rcon clients failing to auth from the specified IP address will never get banned..
        /// </summary>
        internal static string sv_rcon_whitelist_address {
            get {
                return ResourceManager.GetString("sv_rcon_whitelist_address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable adding player weapon usage data to server logs..
        /// </summary>
        internal static string sv_record_item_time_data {
            get {
                return ResourceManager.GetString("sv_record_item_time_data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The region of the world to report this server in..
        /// </summary>
        internal static string sv_region {
            get {
                return ResourceManager.GetString("sv_region", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled player avatars are reliably exchanged between all players and casters on the game server, reliably delivered to GOTV spectators, and recorded in demo files.
        /// </summary>
        internal static string sv_reliableavatardata {
            get {
                return ResourceManager.GetString("sv_reliableavatardata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This can be used to limit the effective FOV of users using wide-screen resolutions with aspect ratios wider than 1.85:1..
        /// </summary>
        internal static string sv_restrict_aspect_ratio_fov {
            get {
                return ResourceManager.GetString("sv_restrict_aspect_ratio_fov", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disable connected clients to use cl_show_team_equipment..
        /// </summary>
        internal static string sv_show_team_equipment_prohibit {
            get {
                return ResourceManager.GetString("sv_show_team_equipment_prohibit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show bbox and dismount points for all ladders..
        /// </summary>
        internal static string sv_showladders {
            get {
                return ResourceManager.GetString("sv_showladders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show lag compensated hitboxes whenever a player is lag compensated..
        /// </summary>
        internal static string sv_showlagcompensation {
            get {
                return ResourceManager.GetString("sv_showlagcompensation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the server to shutdown next time it&apos;s empty..
        /// </summary>
        internal static string sv_shutdown {
            get {
                return ResourceManager.GetString("sv_shutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel a pending shutdown of dedicated server..
        /// </summary>
        internal static string sv_shutdown_cancel {
            get {
                return ResourceManager.GetString("sv_shutdown_cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current name of the skybox texture..
        /// </summary>
        internal static string sv_skyname {
            get {
                return ResourceManager.GetString("sv_skyname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show all EmitSound calls including their symbolic name and the actual wave file they resolved to..
        /// </summary>
        internal static string sv_soundemitter_trace {
            get {
                return ResourceManager.GetString("sv_soundemitter_trace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows adding a delay for spectators between the death of a spec target and the switch to a new target..
        /// </summary>
        internal static string sv_spec_post_death_additional_time {
            get {
                return ResourceManager.GetString("sv_spec_post_death_additional_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disallow the server to prefer official pro player names when available and omit weapon tags for spectators..
        /// </summary>
        internal static string sv_spec_use_tournament_content_standards {
            get {
                return ResourceManager.GetString("sv_spec_use_tournament_content_standards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collect CPU usage stats..
        /// </summary>
        internal static string sv_stats {
            get {
                return ResourceManager.GetString("sv_stats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check each new player for Steam blocking compatibility..
        /// </summary>
        internal static string sv_steamblockingcheck {
            get {
                return ResourceManager.GetString("sv_steamblockingcheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ID of the steam group that this server belongs to. You can find your group&apos;s ID on the admin profile page..
        /// </summary>
        internal static string sv_steamgroup {
            get {
                return ResourceManager.GetString("sv_steamgroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, notarget will cause entities to never think they are in the pvs..
        /// </summary>
        internal static string sv_strict_notarget {
            get {
                return ResourceManager.GetString("sv_strict_notarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server tags. Used to provide extra information to clients when they&apos;re browsing for servers. Separate tags with a comma..
        /// </summary>
        internal static string sv_tags {
            get {
                return ResourceManager.GetString("sv_tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable alltalk for dead players..
        /// </summary>
        internal static string sv_talk_enemy_dead {
            get {
                return ResourceManager.GetString("sv_talk_enemy_dead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable alltalk for living players..
        /// </summary>
        internal static string sv_talk_enemy_living {
            get {
                return ResourceManager.GetString("sv_talk_enemy_living", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disable connected clients to use cl_teamid_overhead_always..
        /// </summary>
        internal static string sv_teamid_overhead_always_prohibit {
            get {
                return ResourceManager.GetString("sv_teamid_overhead_always_prohibit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tests for scripted sequences that are embedded in the world..
        /// </summary>
        internal static string sv_test_scripted_sequences {
            get {
                return ResourceManager.GetString("sv_test_scripted_sequences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for thinktimes all on same timestamp..
        /// </summary>
        internal static string sv_thinktimecheck {
            get {
                return ResourceManager.GetString("sv_thinktimecheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cooldown to the crouch button to reduce the visual noise from spamming crouch in the air..
        /// </summary>
        internal static string sv_timebetweenducks {
            get {
                return ResourceManager.GetString("sv_timebetweenducks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After this many seconds without a message from a client, the client is dropped..
        /// </summary>
        internal static string sv_timeout {
            get {
                return ResourceManager.GetString("sv_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turns on turbo physics..
        /// </summary>
        internal static string sv_turbophysics {
            get {
                return ResourceManager.GetString("sv_turbophysics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highest unlocked game chapter..
        /// </summary>
        internal static string sv_unlockedchapters {
            get {
                return ResourceManager.GetString("sv_unlockedchapters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use new voice codec instead of old. Deprecated. Replaced by sv_voicecodec..
        /// </summary>
        internal static string sv_use_steam_voice {
            get {
                return ResourceManager.GetString("sv_use_steam_voice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overrides the max players reported to prospective clients..
        /// </summary>
        internal static string sv_visiblemaxplayers {
            get {
                return ResourceManager.GetString("sv_visiblemaxplayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies which voice codec to use in a game..
        /// </summary>
        internal static string sv_voicecodec {
            get {
                return ResourceManager.GetString("sv_voicecodec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow spectators to vote?.
        /// </summary>
        internal static string sv_vote_allow_specators {
            get {
                return ResourceManager.GetString("sv_vote_allow_specators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow spectators to vote?.
        /// </summary>
        internal static string sv_vote_allow_spectators {
            get {
                return ResourceManager.GetString("sv_vote_allow_spectators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disallow count spectators votes..
        /// </summary>
        internal static string sv_vote_count_spectator_votes {
            get {
                return ResourceManager.GetString("sv_vote_count_spectator_votes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A vote that fails cannot be voted on again during this period..
        /// </summary>
        internal static string sv_vote_failure_timer {
            get {
                return ResourceManager.GetString("sv_vote_failure_timer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A vote that fails in MvM cannot be re-submitted for this long..
        /// </summary>
        internal static string sv_vote_failure_timer_mvm {
            get {
                return ResourceManager.GetString("sv_vote_failure_timer_mvm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable auto team balance vote..
        /// </summary>
        internal static string sv_vote_issue_autobalance_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_autobalance_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to change levels?.
        /// </summary>
        internal static string sv_vote_issue_changelevel_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_changelevel_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can people hold votes to change levels in MvM?.
        /// </summary>
        internal static string sv_vote_issue_changelevel_allowed_mvm {
            get {
                return ResourceManager.GetString("sv_vote_issue_changelevel_allowed_mvm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to kick players from the server?.
        /// </summary>
        internal static string sv_vote_issue_kick_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_kick_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can people hold votes to kick players from the server in MvM?.
        /// </summary>
        internal static string sv_vote_issue_kick_allowed_mvm {
            get {
                return ResourceManager.GetString("sv_vote_issue_kick_allowed_mvm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can people hold votes to set the challenge level?.
        /// </summary>
        internal static string sv_vote_issue_mvm_challenge_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_mvm_challenge_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to set the next level?.
        /// </summary>
        internal static string sv_vote_issue_nextlevel_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to extend the current map?.
        /// </summary>
        internal static string sv_vote_issue_nextlevel_allowextend {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_allowextend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Present players with a list of maps with the lowest playtimes to choose from?.
        /// </summary>
        internal static string sv_vote_issue_nextlevel_choicesmode {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_choicesmode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent voting on the next level if one has already been set..
        /// </summary>
        internal static string sv_vote_issue_nextlevel_prevent_change {
            get {
                return ResourceManager.GetString("sv_vote_issue_nextlevel_prevent_change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to restart the game?.
        /// </summary>
        internal static string sv_vote_issue_restart_game_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_restart_game_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow votes to scramble the teams?.
        /// </summary>
        internal static string sv_vote_issue_scramble_teams_allowed {
            get {
                return ResourceManager.GetString("sv_vote_issue_scramble_teams_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long should a kick vote ban someone from the server? (in minutes).
        /// </summary>
        internal static string sv_vote_kick_ban_duration {
            get {
                return ResourceManager.GetString("sv_vote_kick_ban_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suppress listing of disabled issues in the vote setup screen..
        /// </summary>
        internal static string sv_vote_ui_hide_disabled_issues {
            get {
                return ResourceManager.GetString("sv_vote_ui_hide_disabled_issues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - disallows/allows the +use command on a server, useful for some custom maps, standard is 0..
        /// </summary>
        internal static string tf_allow_player_use {
            get {
                return ResourceManager.GetString("tf_allow_player_use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable didicated server hibernation..
        /// </summary>
        internal static string tf_allow_server_hibernation {
            get {
                return ResourceManager.GetString("tf_allow_server_hibernation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0 - players are not allowed to switch weapons while taunting, 1 - players can switch weapons at the start of a taunt..
        /// </summary>
        internal static string tf_allow_taunt_switch {
            get {
                return ResourceManager.GetString("tf_allow_taunt_switch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force death anims to always play..
        /// </summary>
        internal static string tf_always_deathanim {
            get {
                return ResourceManager.GetString("tf_always_deathanim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force loserstate to true..
        /// </summary>
        internal static string tf_always_loser {
            get {
                return ResourceManager.GetString("tf_always_loser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rewards the first player to get a kill each round..
        /// </summary>
        internal static string tf_arena_first_blood {
            get {
                return ResourceManager.GetString("tf_arena_first_blood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teams will be scrambled if one team reaches this streak..
        /// </summary>
        internal static string tf_arena_max_streak {
            get {
                return ResourceManager.GetString("tf_arena_max_streak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overrides the time (in seconds) it takes for the capture point to become enable, -1 uses the level designer specified time..
        /// </summary>
        internal static string tf_arena_override_cap_enable_time {
            get {
                return ResourceManager.GetString("tf_arena_override_cap_enable_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of the Pre-Round time..
        /// </summary>
        internal static string tf_arena_preround_time {
            get {
                return ResourceManager.GetString("tf_arena_preround_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arena round time..
        /// </summary>
        internal static string tf_arena_round_time {
            get {
                return ResourceManager.GetString("tf_arena_round_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables the spectator queue system for Arena..
        /// </summary>
        internal static string tf_arena_use_queue {
            get {
                return ResourceManager.GetString("tf_arena_use_queue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which detection method to use for backstabs (0 = old, 1 = new)..
        /// </summary>
        internal static string tf_backstab_detection_method {
            get {
                return ResourceManager.GetString("tf_backstab_detection_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn on birthday mode..
        /// </summary>
        internal static string tf_birthday {
            get {
                return ResourceManager.GetString("tf_birthday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percent chance of a birthday beach ball spawning at each round start..
        /// </summary>
        internal static string tf_birthday_ball_chance {
            get {
                return ResourceManager.GetString("tf_birthday_ball_chance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a bot..
        /// </summary>
        internal static string tf_bot_add {
            get {
                return ResourceManager.GetString("tf_bot_add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How far bots will search to find ammo around them..
        /// </summary>
        internal static string tf_bot_ammo_search_range {
            get {
                return ResourceManager.GetString("tf_bot_ammo_search_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When firing arrows at far away targets, this is the degree/range slope to raise our aim..
        /// </summary>
        internal static string tf_bot_arrow_elevation_rate {
            get {
                return ResourceManager.GetString("tf_bot_arrow_elevation_rate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, bots will automatically leave to make room for human players..
        /// </summary>
        internal static string tf_bot_auto_vacate {
            get {
                return ResourceManager.GetString("tf_bot_auto_vacate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When lobbing grenades at far away targets, this is the degree/range slope to raise our aim..
        /// </summary>
        internal static string tf_bot_ballistic_elevation_rate {
            get {
                return ResourceManager.GetString("tf_bot_ballistic_elevation_rate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a capturing bot decides to go hunting, this is the max duration he will hunt for before reconsidering..
        /// </summary>
        internal static string tf_bot_capture_seek_and_destroy_max_duration {
            get {
                return ResourceManager.GetString("tf_bot_capture_seek_and_destroy_max_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a capturing bot decides to go hunting, this is the min duration he will hunt for before reconsidering..
        /// </summary>
        internal static string tf_bot_capture_seek_and_destroy_min_duration {
            get {
                return ResourceManager.GetString("tf_bot_capture_seek_and_destroy_min_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How often, in seconds, a TFBot can reselect his target..
        /// </summary>
        internal static string tf_bot_choose_target_interval {
            get {
                return ResourceManager.GetString("tf_bot_choose_target_interval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Given a server logfile, visually display bot stuck locations..
        /// </summary>
        internal static string tf_bot_debug_stuck_log {
            get {
                return ResourceManager.GetString("tf_bot_debug_stuck_log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stay on the contested point we own until enemy cap percent falls below this..
        /// </summary>
        internal static string tf_bot_defend_owned_point_percent {
            get {
                return ResourceManager.GetString("tf_bot_defend_owned_point_percent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If timer is less than this, bots will stay near point and guard..
        /// </summary>
        internal static string tf_bot_defense_must_defend_time {
            get {
                return ResourceManager.GetString("tf_bot_defense_must_defend_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines the skill of bots joining the game. Values are: 0=easy, 1=normal, 2=hard, 3=expert..
        /// </summary>
        internal static string tf_bot_difficulty {
            get {
                return ResourceManager.GetString("tf_bot_difficulty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum travel distance between a bot&apos;s Sentry gun and its Teleporter Exit..
        /// </summary>
        internal static string tf_bot_engineer_exit_near_sentry_range {
            get {
                return ResourceManager.GetString("tf_bot_engineer_exit_near_sentry_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum travel distance between a bot&apos;s Sentry gun and the currently contested point..
        /// </summary>
        internal static string tf_bot_engineer_max_sentry_travel_distance_to_point {
            get {
                return ResourceManager.GetString("tf_bot_engineer_max_sentry_travel_distance_to_point", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If attacker who destroyed sentry is closer than this, attack. Otherwise, retreat..
        /// </summary>
        internal static string tf_bot_engineer_retaliate_range {
            get {
                return ResourceManager.GetString("tf_bot_engineer_retaliate_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long busy TFBots will ignore the dropped flag before they give up what they are doing and go after it..
        /// </summary>
        internal static string tf_bot_fetch_lost_flag_time {
            get {
                return ResourceManager.GetString("tf_bot_fetch_lost_flag_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If zero, TFBots will not pull the trigger of their weapons (but will act like they did)..
        /// </summary>
        internal static string tf_bot_fire_weapon_allowed {
            get {
                return ResourceManager.GetString("tf_bot_fire_weapon_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, any bot that picks up the flag dies. For testing..
        /// </summary>
        internal static string tf_bot_flag_kill_on_touch {
            get {
                return ResourceManager.GetString("tf_bot_flag_kill_on_touch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to a class name, all TFBots will respawn as that class..
        /// </summary>
        internal static string tf_bot_force_class {
            get {
                return ResourceManager.GetString("tf_bot_force_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force bots to continuously jump..
        /// </summary>
        internal static string tf_bot_force_jump {
            get {
                return ResourceManager.GetString("tf_bot_force_jump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, bots wait until a player joins before entering the game..
        /// </summary>
        internal static string tf_bot_join_after_player {
            get {
                return ResourceManager.GetString("tf_bot_join_after_player", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove a TFBot by name, or all bots (&apos;all&apos;)..
        /// </summary>
        internal static string tf_bot_kick {
            get {
                return ResourceManager.GetString("tf_bot_kick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill a TFBot by name, or all bots (&apos;all&apos;)..
        /// </summary>
        internal static string tf_bot_kill {
            get {
                return ResourceManager.GetString("tf_bot_kill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How far (in travel distance) from the point defending bots will take up positions..
        /// </summary>
        internal static string tf_bot_max_point_defend_range {
            get {
                return ResourceManager.GetString("tf_bot_max_point_defend_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How far from the setup gate(s) defending bots can take up positions..
        /// </summary>
        internal static string tf_bot_max_setup_gate_defend_range {
            get {
                return ResourceManager.GetString("tf_bot_max_setup_gate_defend_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t plant teleport entrances farther than this travel distance from our spawn room..
        /// </summary>
        internal static string tf_bot_max_teleport_entrance_travel {
            get {
                return ResourceManager.GetString("tf_bot_max_teleport_entrance_travel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In an offensive engineer bot&apos;s tele exit is farther from the point than this, destroy it..
        /// </summary>
        internal static string tf_bot_max_teleport_exit_travel_to_point {
            get {
                return ResourceManager.GetString("tf_bot_max_teleport_exit_travel_to_point", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If threat is farther away than this, bot will switch back to its primary weapon and attack..
        /// </summary>
        internal static string tf_bot_melee_attack_abandon_range {
            get {
                return ResourceManager.GetString("tf_bot_melee_attack_abandon_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If nonzero, TFBots will only use melee weapons..
        /// </summary>
        internal static string tf_bot_melee_only {
            get {
                return ResourceManager.GetString("tf_bot_melee_only", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How close from the setup gate(s) defending bots can take up positions. Areas closer than this will be in cover to ambush..
        /// </summary>
        internal static string tf_bot_min_setup_gate_defend_range {
            get {
                return ResourceManager.GetString("tf_bot_min_setup_gate_defend_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How far from the setup gate(s) a defending sniper will take up position..
        /// </summary>
        internal static string tf_bot_min_setup_gate_sniper_defend_range {
            get {
                return ResourceManager.GetString("tf_bot_min_setup_gate_sniper_defend_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum travel distance between teleporter entrance and exit before engineer bot will build one..
        /// </summary>
        internal static string tf_bot_min_teleport_travel {
            get {
                return ResourceManager.GetString("tf_bot_min_teleport_travel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If within this travel distance to the current point, bot is &apos;near&apos; it..
        /// </summary>
        internal static string tf_bot_near_point_travel_distance {
            get {
                return ResourceManager.GetString("tf_bot_near_point_travel_distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If timer is less than this, bots will push hard to cap..
        /// </summary>
        internal static string tf_bot_offense_must_push_time {
            get {
                return ResourceManager.GetString("tf_bot_offense_must_push_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tells the server that it is in offline practice mode..
        /// </summary>
        internal static string tf_bot_offline_practice {
            get {
                return ResourceManager.GetString("tf_bot_offline_practice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Append the skill level of the bot to the bot&apos;s name..
        /// </summary>
        internal static string tf_bot_prefix_name_with_difficulty {
            get {
                return ResourceManager.GetString("tf_bot_prefix_name_with_difficulty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pyro bots will always reflect projectiles fired at them. For tesing/debugging purposes..
        /// </summary>
        internal static string tf_bot_pyro_always_reflect {
            get {
                return ResourceManager.GetString("tf_bot_pyro_always_reflect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a Pyro bot&apos;s target is closer than this, compression blast them away..
        /// </summary>
        internal static string tf_bot_pyro_shove_away_range {
            get {
                return ResourceManager.GetString("tf_bot_pyro_shove_away_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines the total number of tf bots in the game..
        /// </summary>
        internal static string tf_bot_quota {
            get {
                return ResourceManager.GetString("tf_bot_quota", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines the type of quota. Allowed values: &apos;normal&apos;, &apos;fill&apos;, and &apos;match&apos;..
        /// </summary>
        internal static string tf_bot_quota_mode {
            get {
                return ResourceManager.GetString("tf_bot_quota_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disallow bots reselecting their class while in spawn rooms..
        /// </summary>
        internal static string tf_bot_reevaluate_class_in_spawnroom {
            get {
                return ResourceManager.GetString("tf_bot_reevaluate_class_in_spawnroom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, Snipers will stop on their way to their preferred lurking spot to snipe at opportunistic targets..
        /// </summary>
        internal static string tf_bot_sniper_allow_opportunistic {
            get {
                return ResourceManager.GetString("tf_bot_sniper_allow_opportunistic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How often, in seconds, a zoomed-in Sniper can reselect his target..
        /// </summary>
        internal static string tf_bot_sniper_choose_target_interval {
            get {
                return ResourceManager.GetString("tf_bot_sniper_choose_target_interval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If threat is closer than this, retreat..
        /// </summary>
        internal static string tf_bot_sniper_flee_range {
            get {
                return ResourceManager.GetString("tf_bot_sniper_flee_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long Sniper will wait around after losing his target before giving up..
        /// </summary>
        internal static string tf_bot_sniper_linger_time {
            get {
                return ResourceManager.GetString("tf_bot_sniper_linger_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If threat is closer than this, attack with melee weapon..
        /// </summary>
        internal static string tf_bot_sniper_melee_range {
            get {
                return ResourceManager.GetString("tf_bot_sniper_melee_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long a Sniper bot will wait without seeing an enemy before picking a new spot..
        /// </summary>
        internal static string tf_bot_sniper_patience_duration {
            get {
                return ResourceManager.GetString("tf_bot_sniper_patience_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enemies beyond this range don&apos;t worry the Sniper..
        /// </summary>
        internal static string tf_bot_sniper_personal_space_range {
            get {
                return ResourceManager.GetString("tf_bot_sniper_personal_space_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop searching for sniper spots when each side has found this many..
        /// </summary>
        internal static string tf_bot_sniper_spot_max_count {
            get {
                return ResourceManager.GetString("tf_bot_sniper_spot_max_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search this many times per behavior update frame..
        /// </summary>
        internal static string tf_bot_sniper_spot_search_count {
            get {
                return ResourceManager.GetString("tf_bot_sniper_spot_search_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long a Sniper bot will keep toward at a target it just lost sight of..
        /// </summary>
        internal static string tf_bot_sniper_target_linger_duration {
            get {
                return ResourceManager.GetString("tf_bot_sniper_target_linger_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If threat is closer than this, prefer our knife..
        /// </summary>
        internal static string tf_bot_spy_knife_range {
            get {
                return ResourceManager.GetString("tf_bot_spy_knife_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seconds of charge per unit range beyond base..
        /// </summary>
        internal static string tf_bot_sticky_charge_rate {
            get {
                return ResourceManager.GetString("tf_bot_sticky_charge_rate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of stickies to place per square inch..
        /// </summary>
        internal static string tf_bot_stickybomb_density {
            get {
                return ResourceManager.GetString("tf_bot_stickybomb_density", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the ground normal Z component is less that this value, Engineer bots won&apos;t place their entrance teleporter..
        /// </summary>
        internal static string tf_bot_teleport_build_surface_normal_limit {
            get {
                return ResourceManager.GetString("tf_bot_teleport_build_surface_normal_limit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use console controller build menus. 1 = ON, 0 = OFF..
        /// </summary>
        internal static string tf_build_menu_controller_mode {
            get {
                return ResourceManager.GetString("tf_build_menu_controller_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove given attribute from all areas in the selected set..
        /// </summary>
        internal static string tf_clear_attribute {
            get {
                return ResourceManager.GetString("tf_clear_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When on, players will turn their pupils to look at nearby players..
        /// </summary>
        internal static string tf_clientsideeye_lookats {
            get {
                return ResourceManager.GetString("tf_clientsideeye_lookats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting this to 1 turns on colorblind mode..
        /// </summary>
        internal static string tf_colorblindassist {
            get {
                return ResourceManager.GetString("tf_colorblindassist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of team crit time for CTF capture..
        /// </summary>
        internal static string tf_ctf_bonus_time {
            get {
                return ResourceManager.GetString("tf_ctf_bonus_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns random damage-spread (+-10%) for weapons off/on..
        /// </summary>
        internal static string tf_damage_disablespread {
            get {
                return ResourceManager.GetString("tf_damage_disablespread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All incoming damage to a blue player is multiplied by this value..
        /// </summary>
        internal static string tf_damage_multiplier_blue {
            get {
                return ResourceManager.GetString("tf_damage_multiplier_blue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All incoming damage to a red player is multiplied by this value..
        /// </summary>
        internal static string tf_damage_multiplier_red {
            get {
                return ResourceManager.GetString("tf_damage_multiplier_red", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visualize the flamethrower damage..
        /// </summary>
        internal static string tf_debug_flamethrower {
            get {
                return ResourceManager.GetString("tf_debug_flamethrower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lifetime of a decoy, in seconds..
        /// </summary>
        internal static string tf_decoy_lifetime {
            get {
                return ResourceManager.GetString("tf_decoy_lifetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the pitch when doing maximum damage with your weapon, a lower pitch is recommended in most cases, standard is 100..
        /// </summary>
        internal static string tf_dingaling_pitchmaxdmg {
            get {
                return ResourceManager.GetString("tf_dingaling_pitchmaxdmg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the pitch when doing minimum damage with your weapon, a higher pitch is recommended in most cases, standard is 100..
        /// </summary>
        internal static string tf_dingaling_pitchmindmg {
            get {
                return ResourceManager.GetString("tf_dingaling_pitchmindmg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the volume for hit sounds, standard is 1.00..
        /// </summary>
        internal static string tf_dingaling_volume {
            get {
                return ResourceManager.GetString("tf_dingaling_volume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows using a custom hit sound. No longer used. To use a custom hit sound, rename your sound file &quot;hitsound.wav&quot;, and place it in the &quot;tf/sound/ui/&quot; folder..
        /// </summary>
        internal static string tf_dingaling_wav_override {
            get {
                return ResourceManager.GetString("tf_dingaling_wav_override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns weapon hit sound off/on..
        /// </summary>
        internal static string tf_dingalingaling {
            get {
                return ResourceManager.GetString("tf_dingalingaling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use console controller disguise menus. 1 = ON, 0 = OFF..
        /// </summary>
        internal static string tf_disguise_menu_controller_mode {
            get {
                return ResourceManager.GetString("tf_disguise_menu_controller_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store dropped weapons for N seconds. 0 - disabled..
        /// </summary>
        internal static string tf_dropped_weapon_lifetime {
            get {
                return ResourceManager.GetString("tf_dropped_weapon_lifetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Score for escorting the train, in points per second..
        /// </summary>
        internal static string tf_escort_score_rate {
            get {
                return ResourceManager.GetString("tf_escort_score_rate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has seen explanations for this panel..
        /// </summary>
        internal static string tf_explanations_backpackpanel {
            get {
                return ResourceManager.GetString("tf_explanations_backpackpanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has seen explanations for this panel..
        /// </summary>
        internal static string tf_explanations_charinfo_armory_panel {
            get {
                return ResourceManager.GetString("tf_explanations_charinfo_armory_panel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has seen explanations for this panel..
        /// </summary>
        internal static string tf_explanations_charinfopanel {
            get {
                return ResourceManager.GetString("tf_explanations_charinfopanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has seen explanations for this panel..
        /// </summary>
        internal static string tf_explanations_craftingpanel {
            get {
                return ResourceManager.GetString("tf_explanations_craftingpanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has seen explanations for this panel..
        /// </summary>
        internal static string tf_explanations_discardpanel {
            get {
                return ResourceManager.GetString("tf_explanations_discardpanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has seen explanations for this panel..
        /// </summary>
        internal static string tf_explanations_store {
            get {
                return ResourceManager.GetString("tf_explanations_store", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has seen explanations for this panel..
        /// </summary>
        internal static string tf_explanations_tradingpanel {
            get {
                return ResourceManager.GetString("tf_explanations_tradingpanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of flag captures per round on CTF maps. Set to 0 to disable..
        /// </summary>
        internal static string tf_flag_caps_per_round {
            get {
                return ResourceManager.GetString("tf_flag_caps_per_round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size of flame damage entities..
        /// </summary>
        internal static string tf_flamethrower_boxsize {
            get {
                return ResourceManager.GetString("tf_flamethrower_boxsize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/2/3 - enables holiday mode (0 = default; 2 = halloween; 3 = birthday)..
        /// </summary>
        internal static string tf_forced_holiday {
            get {
                return ResourceManager.GetString("tf_forced_holiday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable the grappling hook on the server..
        /// </summary>
        internal static string tf_grapplinghook_enable {
            get {
                return ResourceManager.GetString("tf_grapplinghook_enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets hook-jump velocity..
        /// </summary>
        internal static string tf_grapplinghook_jump_up_speed {
            get {
                return ResourceManager.GetString("tf_grapplinghook_jump_up_speed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets hook&apos;s max firing distance..
        /// </summary>
        internal static string tf_grapplinghook_max_distance {
            get {
                return ResourceManager.GetString("tf_grapplinghook_max_distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable fall damage for the grappling hook..
        /// </summary>
        internal static string tf_grapplinghook_prevent_fall_damage {
            get {
                return ResourceManager.GetString("tf_grapplinghook_prevent_fall_damage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teammates can always chat with each other while alive or dead..
        /// </summary>
        internal static string tf_gravetalk {
            get {
                return ResourceManager.GetString("tf_gravetalk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average interval between boss spawns, in seconds..
        /// </summary>
        internal static string tf_halloween_boss_spawn_interval {
            get {
                return ResourceManager.GetString("tf_halloween_boss_spawn_interval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variation of spawn interval +/-..
        /// </summary>
        internal static string tf_halloween_boss_spawn_interval_variation {
            get {
                return ResourceManager.GetString("tf_halloween_boss_spawn_interval_variation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Movement units/second..
        /// </summary>
        internal static string tf_halloween_bot_speed_recovery_rate {
            get {
                return ResourceManager.GetString("tf_halloween_bot_speed_recovery_rate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average interval between boss spawns, in seconds..
        /// </summary>
        internal static string tf_halloween_eyeball_boss_spawn_interval {
            get {
                return ResourceManager.GetString("tf_halloween_eyeball_boss_spawn_interval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variation of spawn interval +/-..
        /// </summary>
        internal static string tf_halloween_eyeball_boss_spawn_interval_variation {
            get {
                return ResourceManager.GetString("tf_halloween_eyeball_boss_spawn_interval_variation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For testing..
        /// </summary>
        internal static string tf_halloween_force_boss_spawn {
            get {
                return ResourceManager.GetString("tf_halloween_force_boss_spawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turns on some console spew for debugging high five issues..
        /// </summary>
        internal static string tf_highfive_debug {
            get {
                return ResourceManager.GetString("tf_highfive_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counts the number of times the high five hint has been displayed..
        /// </summary>
        internal static string tf_highfive_hintcount {
            get {
                return ResourceManager.GetString("tf_highfive_hintcount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long to display hud notification panels before fading them..
        /// </summary>
        internal static string tf_hud_notification_duration {
            get {
                return ResourceManager.GetString("tf_hud_notification_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of times to play warning sound when a new alert displays on building hud objects..
        /// </summary>
        internal static string tf_hud_num_building_alert_beeps {
            get {
                return ResourceManager.GetString("tf_hud_num_building_alert_beeps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw impact debris effects..
        /// </summary>
        internal static string tf_impactwatertime {
            get {
                return ResourceManager.GetString("tf_impactwatertime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw impact debris effects..
        /// </summary>
        internal static string tf_impactwatertimeenable {
            get {
                return ResourceManager.GetString("tf_impactwatertimeenable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prints local invite objects..
        /// </summary>
        internal static string tf_invite_debug {
            get {
                return ResourceManager.GetString("tf_invite_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug command. Show list of available stages on current map..
        /// </summary>
        internal static string tf_listrounds {
            get {
                return ResourceManager.GetString("tf_listrounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prints local lobby objects..
        /// </summary>
        internal static string tf_lobby_debug {
            get {
                return ResourceManager.GetString("tf_lobby_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set attribute of selected area..
        /// </summary>
        internal static string tf_mark {
            get {
                return ResourceManager.GetString("tf_mark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bit masks of match groups to search in for matchmaking..
        /// </summary>
        internal static string tf_matchgroups {
            get {
                return ResourceManager.GetString("tf_matchgroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Good enough count at end of search..
        /// </summary>
        internal static string tf_matchmaking_goodenough_count_end {
            get {
                return ResourceManager.GetString("tf_matchmaking_goodenough_count_end", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Good enough score at end of search..
        /// </summary>
        internal static string tf_matchmaking_goodenough_score_end {
            get {
                return ResourceManager.GetString("tf_matchmaking_goodenough_score_end", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Good enough score at start of search..
        /// </summary>
        internal static string tf_matchmaking_goodenough_score_start {
            get {
                return ResourceManager.GetString("tf_matchmaking_goodenough_score_start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saved preference for if the player wants to join games in progress..
        /// </summary>
        internal static string tf_matchmaking_join_in_progress {
            get {
                return ResourceManager.GetString("tf_matchmaking_join_in_progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of hours played to determine &apos;noob&apos; status for quickplay scoring purposes..
        /// </summary>
        internal static string tf_matchmaking_noob_hours_played {
            get {
                return ResourceManager.GetString("tf_matchmaking_noob_hours_played", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boost added for quick-plaay scoring purposes if you are a noob and the map is considered noob-friendly..
        /// </summary>
        internal static string tf_matchmaking_noob_map_score_boost {
            get {
                return ResourceManager.GetString("tf_matchmaking_noob_map_score_boost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max scoring penalty to servers that have increased the max number of players..
        /// </summary>
        internal static string tf_matchmaking_numbers_increase_maxplayers_penalty {
            get {
                return ResourceManager.GetString("tf_matchmaking_numbers_increase_maxplayers_penalty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scoring will consider the server &apos;full&apos; when this many slots are available..
        /// </summary>
        internal static string tf_matchmaking_numbers_serverfull_headroom {
            get {
                return ResourceManager.GetString("tf_matchmaking_numbers_serverfull_headroom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valve server scoring bonus: hours played A..
        /// </summary>
        internal static string tf_matchmaking_numbers_valve_bonus_hrs_a {
            get {
                return ResourceManager.GetString("tf_matchmaking_numbers_valve_bonus_hrs_a", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valve server scoring bonus: hours played B..
        /// </summary>
        internal static string tf_matchmaking_numbers_valve_bonus_hrs_b {
            get {
                return ResourceManager.GetString("tf_matchmaking_numbers_valve_bonus_hrs_b", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valve server scoring bonus: bonus points A..
        /// </summary>
        internal static string tf_matchmaking_numbers_valve_bonus_pts_a {
            get {
                return ResourceManager.GetString("tf_matchmaking_numbers_valve_bonus_pts_a", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valve server scoring bonus: bonus points B..
        /// </summary>
        internal static string tf_matchmaking_numbers_valve_bonus_pts_b {
            get {
                return ResourceManager.GetString("tf_matchmaking_numbers_valve_bonus_pts_b", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quickplay scoring ping time data point A..
        /// </summary>
        internal static string tf_matchmaking_ping_a {
            get {
                return ResourceManager.GetString("tf_matchmaking_ping_a", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quickplay scoring ping score data point A..
        /// </summary>
        internal static string tf_matchmaking_ping_a_score {
            get {
                return ResourceManager.GetString("tf_matchmaking_ping_a_score", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quickplay scoring ping time data point B..
        /// </summary>
        internal static string tf_matchmaking_ping_b {
            get {
                return ResourceManager.GetString("tf_matchmaking_ping_b", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quickplay scoring ping score data point B..
        /// </summary>
        internal static string tf_matchmaking_ping_b_score {
            get {
                return ResourceManager.GetString("tf_matchmaking_ping_b_score", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quickplay scoring ping time data point C..
        /// </summary>
        internal static string tf_matchmaking_ping_c {
            get {
                return ResourceManager.GetString("tf_matchmaking_ping_c", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quickplay scoring ping score data point C..
        /// </summary>
        internal static string tf_matchmaking_ping_c_score {
            get {
                return ResourceManager.GetString("tf_matchmaking_ping_c_score", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time to remember quickplay join attempt, and apply scoring penalty to rejoin the same server..
        /// </summary>
        internal static string tf_matchmaking_retry_cooldown_seconds {
            get {
                return ResourceManager.GetString("tf_matchmaking_retry_cooldown_seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max scoring penalty to rejoin a server previously matched. (Decays linearly over the cooldown period)..
        /// </summary>
        internal static string tf_matchmaking_retry_max_penalty {
            get {
                return ResourceManager.GetString("tf_matchmaking_retry_max_penalty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 1 for basic console spew of quickplay-related decisions. 4 for maximum verbosity..
        /// </summary>
        internal static string tf_matchmaking_spew_level {
            get {
                return ResourceManager.GetString("tf_matchmaking_spew_level", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - enables Medieval mode on the server, requires map change to take effect..
        /// </summary>
        internal static string tf_medieval {
            get {
                return ResourceManager.GetString("tf_medieval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - enables/disables automatic medieval-style text modification in the chat box..
        /// </summary>
        internal static string tf_medieval_autorp {
            get {
                return ResourceManager.GetString("tf_medieval_autorp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - toggles third person view during Medieval mode..
        /// </summary>
        internal static string tf_medieval_thirdperson {
            get {
                return ResourceManager.GetString("tf_medieval_thirdperson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns automatic healing without holding the left mouse button off/on..
        /// </summary>
        internal static string tf_medigun_autoheal {
            get {
                return ResourceManager.GetString("tf_medigun_autoheal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max duration the server will wait for a player to join, after notification from the backend that we should expect him..
        /// </summary>
        internal static string tf_mm_player_reservation_timeout_seconds {
            get {
                return ResourceManager.GetString("tf_mm_player_reservation_timeout_seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activates / deactivates Lobby-based hosting mode..
        /// </summary>
        internal static string tf_mm_servermode {
            get {
                return ResourceManager.GetString("tf_mm_servermode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0 - Show in server browser, and allow ad-hoc joins. 1 - Hide from server browser and only allow joins from lobby..
        /// </summary>
        internal static string tf_mm_strict {
            get {
                return ResourceManager.GetString("tf_mm_strict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save a checkpoint snapshot..
        /// </summary>
        internal static string tf_mvm_checkpoint {
            get {
                return ResourceManager.GetString("tf_mvm_checkpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear the saved checkpoint..
        /// </summary>
        internal static string tf_mvm_checkpoint_clear {
            get {
                return ResourceManager.GetString("tf_mvm_checkpoint_clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable to Disconnect Players after completing MvM..
        /// </summary>
        internal static string tf_mvm_disconnect_on_victory {
            get {
                return ResourceManager.GetString("tf_mvm_disconnect_on_victory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force immediate victory..
        /// </summary>
        internal static string tf_mvm_force_victory {
            get {
                return ResourceManager.GetString("tf_mvm_force_victory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jumps directly to the given Mann Vs Machine wave number..
        /// </summary>
        internal static string tf_mvm_jump_to_wave {
            get {
                return ResourceManager.GetString("tf_mvm_jump_to_wave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum number of players connected to start a countdown timer..
        /// </summary>
        internal static string tf_mvm_min_players_to_start {
            get {
                return ResourceManager.GetString("tf_mvm_min_players_to_start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full body scale for minibosses..
        /// </summary>
        internal static string tf_mvm_miniboss_scale {
            get {
                return ResourceManager.GetString("tf_mvm_miniboss_scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the .res file used to cycle mvm misisons..
        /// </summary>
        internal static string tf_mvm_missioncyclefile {
            get {
                return ResourceManager.GetString("tf_mvm_missioncyclefile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart the current map with a different population file..
        /// </summary>
        internal static string tf_mvm_popfile {
            get {
                return ResourceManager.GetString("tf_mvm_popfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disallow skill respec in MvM mode..
        /// </summary>
        internal static string tf_mvm_respec_enabled {
            get {
                return ResourceManager.GetString("tf_mvm_respec_enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets MvM skill respec time limit..
        /// </summary>
        internal static string tf_mvm_respec_limit {
            get {
                return ResourceManager.GetString("tf_mvm_respec_limit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the challenge level of the invading bot army: 1 = easiest, 3 = normal, 5 = hardest..
        /// </summary>
        internal static string tf_mvm_skill {
            get {
                return ResourceManager.GetString("tf_mvm_skill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember how many times players have clicked tabs..
        /// </summary>
        internal static string tf_mvm_tabs_discovered {
            get {
                return ResourceManager.GetString("tf_mvm_tabs_discovered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gunfire/second increase (combat caps at 1.0)..
        /// </summary>
        internal static string tf_nav_combat_build_rate {
            get {
                return ResourceManager.GetString("tf_nav_combat_build_rate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decay/second toward zero..
        /// </summary>
        internal static string tf_nav_combat_decay_rate {
            get {
                return ResourceManager.GetString("tf_nav_combat_decay_rate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How long after gunfire occurs is this area still considered to be &apos;in combat&apos;..
        /// </summary>
        internal static string tf_nav_in_combat_duration {
            get {
                return ResourceManager.GetString("tf_nav_in_combat_duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display travel distances from current spawn room (1=red, 2=blue)..
        /// </summary>
        internal static string tf_nav_show_incursion_distance {
            get {
                return ResourceManager.GetString("tf_nav_show_incursion_distance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color nav area by smallest incursion distance..
        /// </summary>
        internal static string tf_nav_show_turf_ownership {
            get {
                return ResourceManager.GetString("tf_nav_show_turf_ownership", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns endless shouting of &quot;OVERTIME!&quot; in Overtime off/on..
        /// </summary>
        internal static string tf_overtime_nag {
            get {
                return ResourceManager.GetString("tf_overtime_nag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable particles related to weather effects..
        /// </summary>
        internal static string tf_particles_disable_weather {
            get {
                return ResourceManager.GetString("tf_particles_disable_weather", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prints local party objects..
        /// </summary>
        internal static string tf_party_debug {
            get {
                return ResourceManager.GetString("tf_party_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of scores per round for PASS Time mode..
        /// </summary>
        internal static string tf_passtime_scores_per_round {
            get {
                return ResourceManager.GetString("tf_passtime_scores_per_round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the freeze period at the beginning of round..
        /// </summary>
        internal static string tf_player_movement_restart_freeze {
            get {
                return ResourceManager.GetString("tf_player_movement_restart_freeze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow player gibbing: 0 = never; 1 = normal; 2 = always..
        /// </summary>
        internal static string tf_playergib {
            get {
                return ResourceManager.GetString("tf_playergib", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug command. Switch to specified stage on maps with multiple stages..
        /// </summary>
        internal static string tf_playgrounds {
            get {
                return ResourceManager.GetString("tf_playgrounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Populate the world this far ahead of lead raider, and this far behind last raider..
        /// </summary>
        internal static string tf_populator_active_buffer_range {
            get {
                return ResourceManager.GetString("tf_populator_active_buffer_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable Mannpower mode on the server..
        /// </summary>
        internal static string tf_powerup_mode {
            get {
                return ResourceManager.GetString("tf_powerup_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disallow players to use blast damage to move during the pre-round freeze period..
        /// </summary>
        internal static string tf_preround_push_from_damage_enable {
            get {
                return ResourceManager.GetString("tf_preround_push_from_damage_enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum amount of time to spend in the press-and-hold taunt&apos;s pose..
        /// </summary>
        internal static string tf_pressandhold_minduration {
            get {
                return ResourceManager.GetString("tf_pressandhold_minduration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Percentage of people who will be prompted to participate in beta quickplay..
        /// </summary>
        internal static string tf_quickplay_beta_ask_percentage {
            get {
                return ResourceManager.GetString("tf_quickplay_beta_ask_percentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preference to participate in beta quickplay: -1 = no preference, 0 = opt out, 1 = opt in..
        /// </summary>
        internal static string tf_quickplay_beta_preference {
            get {
                return ResourceManager.GetString("tf_quickplay_beta_preference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting this to 1 will make the active weapon persist between lives..
        /// </summary>
        internal static string tf_remember_activeweapon {
            get {
                return ResourceManager.GetString("tf_remember_activeweapon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting this to 1 will make the &apos;last weapon&apos; persist between lives..
        /// </summary>
        internal static string tf_remember_lastswitched {
            get {
                return ResourceManager.GetString("tf_remember_lastswitched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When on, replay&apos;s will be seen with pyro vision active..
        /// </summary>
        internal static string tf_replay_pyrovision {
            get {
                return ResourceManager.GetString("tf_replay_pyrovision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When set to 1, you will automatically respawn whenever you change loadouts inside a respawn zone..
        /// </summary>
        internal static string tf_respawn_on_loadoutchanges {
            get {
                return ResourceManager.GetString("tf_respawn_on_loadoutchanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Разрешает / запрещает использовать мышь в таблице результатов (данная функция должна поддерживаться используемым HUD)..
        /// </summary>
        internal static string tf_scoreboard_mouse_mode {
            get {
                return ResourceManager.GetString("tf_scoreboard_mouse_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show ping as text on scoreboard..
        /// </summary>
        internal static string tf_scoreboard_ping_as_text {
            get {
                return ResourceManager.GetString("tf_scoreboard_ping_as_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add good ambush spots to the selected set. For debugging..
        /// </summary>
        internal static string tf_select_ambush_areas {
            get {
                return ResourceManager.GetString("tf_select_ambush_areas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selects areas with the given attribute..
        /// </summary>
        internal static string tf_select_with_attribute {
            get {
                return ResourceManager.GetString("tf_select_with_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner&apos;s SteamID..
        /// </summary>
        internal static string tf_server_identity_account_id {
            get {
                return ResourceManager.GetString("tf_server_identity_account_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable this server from being chosen by the quickplay matchmaking..
        /// </summary>
        internal static string tf_server_identity_disable_quickplay {
            get {
                return ResourceManager.GetString("tf_server_identity_disable_quickplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner&apos;s identity token..
        /// </summary>
        internal static string tf_server_identity_token {
            get {
                return ResourceManager.GetString("tf_server_identity_token", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prints server lobby object..
        /// </summary>
        internal static string tf_server_lobby_debug {
            get {
                return ResourceManager.GetString("tf_server_lobby_debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highlight areas that are considered blocked for TF-specific reasons..
        /// </summary>
        internal static string tf_show_blocked_areas {
            get {
                return ResourceManager.GetString("tf_show_blocked_areas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highlight areas where the enemy team enters the visible environment of the local player..
        /// </summary>
        internal static string tf_show_enemy_invasion_areas {
            get {
                return ResourceManager.GetString("tf_show_enemy_invasion_areas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 = red, 2 = blue..
        /// </summary>
        internal static string tf_show_incursion_flow_gradient {
            get {
                return ResourceManager.GetString("tf_show_incursion_flow_gradient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 = red, 2 = blue..
        /// </summary>
        internal static string tf_show_incursion_flow_range {
            get {
                return ResourceManager.GetString("tf_show_incursion_flow_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 = red, 2 = blue..
        /// </summary>
        internal static string tf_show_incursion_range {
            get {
                return ResourceManager.GetString("tf_show_incursion_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highlight areas with incursion distances between min and max cvar values..
        /// </summary>
        internal static string tf_show_incursion_range_max {
            get {
                return ResourceManager.GetString("tf_show_incursion_range_max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highlight areas with incursion distances between min and max cvar values..
        /// </summary>
        internal static string tf_show_incursion_range_min {
            get {
                return ResourceManager.GetString("tf_show_incursion_range_min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highlight special areas..
        /// </summary>
        internal static string tf_show_mesh_decoration {
            get {
                return ResourceManager.GetString("tf_show_mesh_decoration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highlight special areas marked by hand..
        /// </summary>
        internal static string tf_show_mesh_decoration_manual {
            get {
                return ResourceManager.GetString("tf_show_mesh_decoration_manual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use a more concise disguise selection menu..
        /// </summary>
        internal static string tf_simple_disguise_menu {
            get {
                return ResourceManager.GetString("tf_simple_disguise_menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added teammate player glow outlines, names, and health bars for spectators..
        /// </summary>
        internal static string tf_spec_xray {
            get {
                return ResourceManager.GetString("tf_spec_xray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When on, spectator will see the world with pyro vision active..
        /// </summary>
        internal static string tf_spectate_pyrovision {
            get {
                return ResourceManager.GetString("tf_spectate_pyrovision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Determines the location of the spectator targetID panel..
        /// </summary>
        internal static string tf_spectator_target_location {
            get {
                return ResourceManager.GetString("tf_spectator_target_location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable normal check for valid gameplay, send stats regardless..
        /// </summary>
        internal static string tf_stats_nogameplaycheck {
            get {
                return ResourceManager.GetString("tf_stats_nogameplaycheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time in seconds to allow communication with the Steam Workshop server..
        /// </summary>
        internal static string tf_steam_workshop_query_timeout {
            get {
                return ResourceManager.GetString("tf_steam_workshop_query_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - taunts are in first person for full-body awareness mode (for use with Oculus Rift)..
        /// </summary>
        internal static string tf_taunt_first_person {
            get {
                return ResourceManager.GetString("tf_taunt_first_person", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teammates can always chat with each other while alive or dead. Deprecated. Replaced by tf_gravetalk..
        /// </summary>
        internal static string tf_teamtalk {
            get {
                return ResourceManager.GetString("tf_teamtalk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For testing bodygroups on hats..
        /// </summary>
        internal static string tf_test_hat_bodygroup {
            get {
                return ResourceManager.GetString("tf_test_hat_bodygroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force the player under your crosshair to speak a response rule concept..
        /// </summary>
        internal static string tf_testrr {
            get {
                return ResourceManager.GetString("tf_testrr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run a vcd on the player currently under your crosshair..
        /// </summary>
        internal static string tf_testvcd {
            get {
                return ResourceManager.GetString("tf_testvcd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tournament mode per-team class limit for Demomenz..
        /// </summary>
        internal static string tf_tournament_classlimit_demoman {
            get {
                return ResourceManager.GetString("tf_tournament_classlimit_demoman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tournament mode per-team class limit for Engineers..
        /// </summary>
        internal static string tf_tournament_classlimit_engineer {
            get {
                return ResourceManager.GetString("tf_tournament_classlimit_engineer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tournament mode per-team class limit for Heavies..
        /// </summary>
        internal static string tf_tournament_classlimit_heavy {
            get {
                return ResourceManager.GetString("tf_tournament_classlimit_heavy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tournament mode per-team class limit for Medics..
        /// </summary>
        internal static string tf_tournament_classlimit_medic {
            get {
                return ResourceManager.GetString("tf_tournament_classlimit_medic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tournament mode per-team class limit for Pyros..
        /// </summary>
        internal static string tf_tournament_classlimit_pyro {
            get {
                return ResourceManager.GetString("tf_tournament_classlimit_pyro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tournament mode per-team class limit for Scouts..
        /// </summary>
        internal static string tf_tournament_classlimit_scout {
            get {
                return ResourceManager.GetString("tf_tournament_classlimit_scout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tournament mode per-team class limit for Snipers..
        /// </summary>
        internal static string tf_tournament_classlimit_sniper {
            get {
                return ResourceManager.GetString("tf_tournament_classlimit_sniper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tournament mode per-team class limit for Soldiers..
        /// </summary>
        internal static string tf_tournament_classlimit_soldier {
            get {
                return ResourceManager.GetString("tf_tournament_classlimit_soldier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tournament mode per-team class limit for Spies..
        /// </summary>
        internal static string tf_tournament_classlimit_spy {
            get {
                return ResourceManager.GetString("tf_tournament_classlimit_spy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tournament mode server convar that forces clients to not display the domination icons above players dominating them..
        /// </summary>
        internal static string tf_tournament_hide_domination_icons {
            get {
                return ResourceManager.GetString("tf_tournament_hide_domination_icons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A simple way for the training client to communicate with the server..
        /// </summary>
        internal static string tf_training_client_message {
            get {
                return ResourceManager.GetString("tf_training_client_message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has been prompted to view the new user forums..
        /// </summary>
        internal static string tf_training_has_prompted_for_forums {
            get {
                return ResourceManager.GetString("tf_training_has_prompted_for_forums", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has been prompted to equip something in their loadout..
        /// </summary>
        internal static string tf_training_has_prompted_for_loadout {
            get {
                return ResourceManager.GetString("tf_training_has_prompted_for_loadout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has been prompted to try offline practice..
        /// </summary>
        internal static string tf_training_has_prompted_for_offline_practice {
            get {
                return ResourceManager.GetString("tf_training_has_prompted_for_offline_practice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has been prompted to view the TF2 advanced options..
        /// </summary>
        internal static string tf_training_has_prompted_for_options {
            get {
                return ResourceManager.GetString("tf_training_has_prompted_for_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whether the user has been prompted for training..
        /// </summary>
        internal static string tf_training_has_prompted_for_training {
            get {
                return ResourceManager.GetString("tf_training_has_prompted_for_training", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns fixed, consistent spread for weapons like Shotgun, Scattergun and Shortstop off/on..
        /// </summary>
        internal static string tf_use_fixed_weaponspreads {
            get {
                return ResourceManager.GetString("tf_use_fixed_weaponspreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0/1 - turns random criticals off/on..
        /// </summary>
        internal static string tf_weapon_criticals {
            get {
                return ResourceManager.GetString("tf_weapon_criticals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay after spawning to start the weapon bucket demo..
        /// </summary>
        internal static string tf_weapon_select_demo_start_delay {
            get {
                return ResourceManager.GetString("tf_weapon_select_demo_start_delay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time to pulse each weapon bucket upon spawning as a new class. 0 to turn off..
        /// </summary>
        internal static string tf_weapon_select_demo_time {
            get {
                return ResourceManager.GetString("tf_weapon_select_demo_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear all TF-specific attributes of selected area..
        /// </summary>
        internal static string tf_wipe_attributes {
            get {
                return ResourceManager.GetString("tf_wipe_attributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Immediately install a map from the workshop by ID..
        /// </summary>
        internal static string tf_workshop_map_sync {
            get {
                return ResourceManager.GetString("tf_workshop_map_sync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recheck tracked workshop maps and refresh subscriptions..
        /// </summary>
        internal static string tf_workshop_refresh {
            get {
                return ResourceManager.GetString("tf_workshop_refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow / disallow to override caster-camera on SourceTV server..
        /// </summary>
        internal static string tv_allow_camera_man_override {
            get {
                return ResourceManager.GetString("tv_allow_camera_man_override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring an additional interactive caster account, with the developed scenario connecting the main caster as a live spectator on the game server directly, and the additional interactive caster connect to TV1 server with a small delay..
        /// </summary>
        internal static string tv_allow_camera_man_steamid2 {
            get {
                return ResourceManager.GetString("tv_allow_camera_man_steamid2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A set of comma-separated IP ranges, clients connecting from those IP addresses will go through full Steam authentication even for GOTV connections, which is necessary for additional interactive caster authentication..
        /// </summary>
        internal static string tv_challenge_steam_iprange {
            get {
                return ResourceManager.GetString("tv_challenge_steam_iprange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set a custom delay on TV1 SourceTV server..
        /// </summary>
        internal static string tv_delay1 {
            get {
                return ResourceManager.GetString("tv_delay1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent manual map changes if SourceTV has not caught up with a major event like the end of a round..
        /// </summary>
        internal static string tv_delaymapchange_protect {
            get {
                return ResourceManager.GetString("tv_delaymapchange_protect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unbinds a key..
        /// </summary>
        internal static string unbind {
            get {
                return ResourceManager.GetString("unbind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used to equip the specified weapon or execute action..
        /// </summary>
        internal static string use {
            get {
                return ResourceManager.GetString("use", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable / disable VGUI caching..
        /// </summary>
        internal static string vgui_cache_res_files {
            get {
                return ResourceManager.GetString("vgui_cache_res_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets distance in which your weapons are drawn, higher values show more of the weapon and arms but may show missing parts..
        /// </summary>
        internal static string viewmodel_fov {
            get {
                return ResourceManager.GetString("viewmodel_fov", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Games that focus on air combat can set this to a lower value to improve weapon accuracy for players in the air..
        /// </summary>
        internal static string weapon_air_spread_scale {
            get {
                return ResourceManager.GetString("weapon_air_spread_scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to non-zero, weapons will delete themselves after the specified time (in seconds) if no players are near..
        /// </summary>
        internal static string weapon_auto_cleanup_time {
            get {
                return ResourceManager.GetString("weapon_auto_cleanup_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to non-zero, will remove the oldest dropped weapon to maintain the specified number of dropped weapons in the world..
        /// </summary>
        internal static string weapon_max_before_cleanup {
            get {
                return ResourceManager.GetString("weapon_max_before_cleanup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the ratio of sensitivity while zoomed in with the Sniper Rifle with accordance to actual sensitivity..
        /// </summary>
        internal static string zoom_sensitivity_ratio {
            get {
                return ResourceManager.GetString("zoom_sensitivity_ratio", resourceCulture);
            }
        }
    }
}
