//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace srcrepair.gui {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("srcrepair.gui.AppStrings", typeof(AppStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No items selected. Please select at least one and then try again!.
        /// </summary>
        internal static string AC_NoItemsSelected {
            get {
                return ResourceManager.GetString("AC_NoItemsSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The program is already running. Starting the second copy is not allowed..
        /// </summary>
        internal static string AppAlreadyRunning {
            get {
                return ResourceManager.GetString("AppAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to copy selected data to the clipboard!.
        /// </summary>
        internal static string AppClipboardCopyError {
            get {
                return ResourceManager.GetString("AppClipboardCopyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to cut selected data to the clipboard!.
        /// </summary>
        internal static string AppClipboardCutError {
            get {
                return ResourceManager.GetString("AppClipboardCutError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to paste data from the clipboard!.
        /// </summary>
        internal static string AppClipboardPasteError {
            get {
                return ResourceManager.GetString("AppClipboardPasteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://developer.valvesoftware.com/wiki/Console_Command_List.
        /// </summary>
        internal static string AppCVListURL {
            get {
                return ResourceManager.GetString("AppCVListURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete the selected rows!.
        /// </summary>
        internal static string AppDeleteRowError {
            get {
                return ResourceManager.GetString("AppDeleteRowError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to get data from the game database. Please try again later or select another game!.
        /// </summary>
        internal static string AppFailedToGetData {
            get {
                return ResourceManager.GetString("AppFailedToGetData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal error occurred! The application will be terminated..
        /// </summary>
        internal static string AppGenericError {
            get {
                return ResourceManager.GetString("AppGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The offline help system file is not installed, or is not supported by the selected program language!.
        /// </summary>
        internal static string AppHelpCHMNotFound {
            get {
                return ResourceManager.GetString("AppHelpCHMNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The required page could not be found in the offline help system file!.
        /// </summary>
        internal static string AppHelpCHMPageError {
            get {
                return ResourceManager.GetString("AppHelpCHMPageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to import settings from the previous version of the application! All settings will be reset to default..
        /// </summary>
        internal static string AppImportSettingsError {
            get {
                return ResourceManager.GetString("AppImportSettingsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect Source Engine version has been detected. This game is not fully supported. Please report this bug to developers!.
        /// </summary>
        internal static string AppIncorrectSrcVersion {
            get {
                return ResourceManager.GetString("AppIncorrectSrcVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to en.
        /// </summary>
        internal static string AppLangPrefix {
            get {
                return ResourceManager.GetString("AppLangPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The core library version does not match the application&apos;s version. Please reinstall or report this issue to developers..
        /// </summary>
        internal static string AppLibVersionMissmatch {
            get {
                return ResourceManager.GetString("AppLibVersionMissmatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug log file not found!.
        /// </summary>
        internal static string AppNoDebugFile {
            get {
                return ResourceManager.GetString("AppNoDebugFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SRC Repair can&apos;t detect any installed supported games. Please run the desired game from Steam at least once. After that, it will appear in the list, and you will be able to manage it by this program..
        /// </summary>
        internal static string AppNoGamesDetected {
            get {
                return ResourceManager.GetString("AppNoGamesDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No installed games found. Steam located at: {0}..
        /// </summary>
        internal static string AppNoGamesDLog {
            get {
                return ResourceManager.GetString("AppNoGamesDLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select the game first and then try again..
        /// </summary>
        internal static string AppNoGamesSelected {
            get {
                return ResourceManager.GetString("AppNoGamesSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Steam user profiles found! Please start Steam at least once and then try again..
        /// </summary>
        internal static string AppNoSteamIDSetected {
            get {
                return ResourceManager.GetString("AppNoSteamIDSetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}?.
        /// </summary>
        internal static string AppQuestionTemplate {
            get {
                return ResourceManager.GetString("AppQuestionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NonASCII characters detected. Path: {0}..
        /// </summary>
        internal static string AppRestrSymbLog {
            get {
                return ResourceManager.GetString("AppRestrSymbLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have disabled SafeClean module. No backups will be created until you re-activate it..
        /// </summary>
        internal static string AppSafeClnDisabled {
            get {
                return ResourceManager.GetString("AppSafeClnDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BackUp: OFF.
        /// </summary>
        internal static string AppSafeClnStTextOff {
            get {
                return ResourceManager.GetString("AppSafeClnStTextOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BackUp: ON.
        /// </summary>
        internal static string AppSafeClnStTextOn {
            get {
                return ResourceManager.GetString("AppSafeClnStTextOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to B.
        /// </summary>
        internal static string AppSizeBytes {
            get {
                return ResourceManager.GetString("AppSizeBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GB.
        /// </summary>
        internal static string AppSizeGigabytes {
            get {
                return ResourceManager.GetString("AppSizeGigabytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KB.
        /// </summary>
        internal static string AppSizeKilobytes {
            get {
                return ResourceManager.GetString("AppSizeKilobytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MB.
        /// </summary>
        internal static string AppSizeMegabytes {
            get {
                return ResourceManager.GetString("AppSizeMegabytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to start Steam. Please reinstall and try again later..
        /// </summary>
        internal static string AppStartSteamFailed {
            get {
                return ResourceManager.GetString("AppStartSteamFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Steam directory entered by user..
        /// </summary>
        internal static string AppSteamPathEnterInvalid {
            get {
                return ResourceManager.GetString("AppSteamPathEnterInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User closed &quot;Find Steam&quot; window..
        /// </summary>
        internal static string AppSteamPathEnterWinClosed {
            get {
                return ResourceManager.GetString("AppSteamPathEnterWinClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new update for {0} is available. We recommend you to upgrade as soon as possible via Help - Check for updates, or manually..
        /// </summary>
        internal static string AppUpdateAvailable {
            get {
                return ResourceManager.GetString("AppUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get video settings of &quot;{0}&quot; from file &quot;{1}&quot;..
        /// </summary>
        internal static string AppVideoDbNotFound {
            get {
                return ResourceManager.GetString("AppVideoDbNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start web browser to visit the bug tracker!.
        /// </summary>
        internal static string AppVisitBugTrackerError {
            get {
                return ResourceManager.GetString("AppVisitBugTrackerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start web browser to visit the variables and functions documentation website!.
        /// </summary>
        internal static string AppVisitCVListError {
            get {
                return ResourceManager.GetString("AppVisitCVListError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to show the official group in both the Steam client and web browser!.
        /// </summary>
        internal static string AppVisitGroupError {
            get {
                return ResourceManager.GetString("AppVisitGroupError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start web browser to visit the official website!.
        /// </summary>
        internal static string AppVisitWebsiteError {
            get {
                return ResourceManager.GetString("AppVisitWebsiteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while parsing XML game database file. Please reinstall this application..
        /// </summary>
        internal static string AppXMLParseError {
            get {
                return ResourceManager.GetString("AppXMLParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured during unpacking selected archive. Additional information can be found in debug log..
        /// </summary>
        internal static string AR_UnpackException {
            get {
                return ResourceManager.GetString("AR_UnpackException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected file is a binary. Unable open it in a text editor!.
        /// </summary>
        internal static string BU_BinaryFile {
            get {
                return ResourceManager.GetString("BU_BinaryFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive of.
        /// </summary>
        internal static string BU_BName_Bud {
            get {
                return ResourceManager.GetString("BU_BName_Bud", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game config of.
        /// </summary>
        internal static string BU_BName_Config {
            get {
                return ResourceManager.GetString("BU_BName_Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graph. options autobackup of.
        /// </summary>
        internal static string BU_BName_GameAuto {
            get {
                return ResourceManager.GetString("BU_BName_GameAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graph. settings of.
        /// </summary>
        internal static string BU_BName_GRGame {
            get {
                return ResourceManager.GetString("BU_BName_GRGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All SRC graph. settings of.
        /// </summary>
        internal static string BU_BName_SRCAll {
            get {
                return ResourceManager.GetString("BU_BName_SRCAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam options of.
        /// </summary>
        internal static string BU_BName_SteamAll {
            get {
                return ResourceManager.GetString("BU_BName_SteamAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Muted players.
        /// </summary>
        internal static string BU_BName_VChat {
            get {
                return ResourceManager.GetString("BU_BName_VChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config.
        /// </summary>
        internal static string BU_BType_Cfg {
            get {
                return ResourceManager.GetString("BU_BType_Cfg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive.
        /// </summary>
        internal static string BU_BType_Cont {
            get {
                return ResourceManager.GetString("BU_BType_Cont", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database.
        /// </summary>
        internal static string BU_BType_DB {
            get {
                return ResourceManager.GetString("BU_BType_DB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry.
        /// </summary>
        internal static string BU_BType_Reg {
            get {
                return ResourceManager.GetString("BU_BType_Reg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string BU_BType_Unkn {
            get {
                return ResourceManager.GetString("BU_BType_Unkn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Video.
        /// </summary>
        internal static string BU_BType_Video {
            get {
                return ResourceManager.GetString("BU_BType_Video", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured. File was not removed!.
        /// </summary>
        internal static string BU_DelFailed {
            get {
                return ResourceManager.GetString("BU_DelFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove selected backup file?.
        /// </summary>
        internal static string BU_DelMsg {
            get {
                return ResourceManager.GetString("BU_DelMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup was successfully removed!.
        /// </summary>
        internal static string BU_DelSuccessful {
            get {
                return ResourceManager.GetString("BU_DelSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No backup files detected. Please refresh the list and try again later!.
        /// </summary>
        internal static string BU_NoFiles {
            get {
                return ResourceManager.GetString("BU_NoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files selected! Please select at least one and try again..
        /// </summary>
        internal static string BU_NoSelected {
            get {
                return ResourceManager.GetString("BU_NoSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load the backup file into the selected text editor!.
        /// </summary>
        internal static string BU_OpenTextEditorFailed {
            get {
                return ResourceManager.GetString("BU_OpenTextEditorFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore selected backups?.
        /// </summary>
        internal static string BU_QMsg {
            get {
                return ResourceManager.GetString("BU_QMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create the registry backup now?.
        /// </summary>
        internal static string BU_RegCreate {
            get {
                return ResourceManager.GetString("BU_RegCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The registry backup was successfully created!.
        /// </summary>
        internal static string BU_RegDone {
            get {
                return ResourceManager.GetString("BU_RegDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred. The backup was not created!.
        /// </summary>
        internal static string BU_RegErr {
            get {
                return ResourceManager.GetString("BU_RegErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred. The backup was not restored!.
        /// </summary>
        internal static string BU_RestFailed {
            get {
                return ResourceManager.GetString("BU_RestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected backups were successfully restored!.
        /// </summary>
        internal static string BU_RestSuccessful {
            get {
                return ResourceManager.GetString("BU_RestSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to show the selected backup file in the file manager!.
        /// </summary>
        internal static string BU_ShowFileError {
            get {
                return ResourceManager.GetString("BU_ShowFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown file type. Can&apos;t restore it!.
        /// </summary>
        internal static string BU_UnknownType {
            get {
                return ResourceManager.GetString("BU_UnknownType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a backup of the game video settings now?.
        /// </summary>
        internal static string BU_VideoCreate {
            get {
                return ResourceManager.GetString("BU_VideoCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A backup of the game video settings has been successfully created!.
        /// </summary>
        internal static string BU_VideoDone {
            get {
                return ResourceManager.GetString("BU_VideoDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while creating a backup copy of the game video settings!.
        /// </summary>
        internal static string BU_VideoErr {
            get {
                return ResourceManager.GetString("BU_VideoErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup of {0} was successfully created!.
        /// </summary>
        internal static string CE_BackUpCreated {
            get {
                return ResourceManager.GetString("CE_BackUpCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred. File was not saved!.
        /// </summary>
        internal static string CE_CfgSVVEx {
            get {
                return ResourceManager.GetString("CE_CfgSVVEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unfortunately we have no description for this variable. You can help by sending it to us..
        /// </summary>
        internal static string CE_ClNoDescr {
            get {
                return ResourceManager.GetString("CE_ClNoDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No variables were found in the selected row!.
        /// </summary>
        internal static string CE_ClSelErr {
            get {
                return ResourceManager.GetString("CE_ClSelErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing error were detected. The config was opened with errors. We do not recommend to save it..
        /// </summary>
        internal static string CE_ExceptionDetected {
            get {
                return ResourceManager.GetString("CE_ExceptionDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create a manual backup of the current config file!.
        /// </summary>
        internal static string CE_ManualBackUpError {
            get {
                return ResourceManager.GetString("CE_ManualBackUpError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please open file first in order to use this funtion!.
        /// </summary>
        internal static string CE_NoFileOpened {
            get {
                return ResourceManager.GetString("CE_NoFileOpened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select a cell in order to use this function!.
        /// </summary>
        internal static string CE_NoSelection {
            get {
                return ResourceManager.GetString("CE_NoSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not read the contents of the config file!.
        /// </summary>
        internal static string CE_OpenFailed {
            get {
                return ResourceManager.GetString("CE_OpenFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open the config file in the selected text editor!.
        /// </summary>
        internal static string CE_OpenTextEditorError {
            get {
                return ResourceManager.GetString("CE_OpenTextEditorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We not recommend to edit this file, because this may lead to unpredictable consequences. Edit it at your own risk..
        /// </summary>
        internal static string CE_RestConfigOpenWarn {
            get {
                return ResourceManager.GetString("CE_RestConfigOpenWarn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured. Failed to open config selector! Try again later..
        /// </summary>
        internal static string CS_FailedToOpenCfg {
            get {
                return ResourceManager.GetString("CS_FailedToOpenCfg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not enough configs in the list..
        /// </summary>
        internal static string CS_NEParamsFormException {
            get {
                return ResourceManager.GetString("CS_NEParamsFormException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for updates... Please wait!.
        /// </summary>
        internal static string DB_WrkInProgress {
            get {
                return ResourceManager.GetString("DB_WrkInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install selected config.
        /// </summary>
        internal static string FP_BtnInstallText {
            get {
                return ResourceManager.GetString("FP_BtnInstallText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace to selected config.
        /// </summary>
        internal static string FP_BtnReplaceText {
            get {
                return ResourceManager.GetString("FP_BtnReplaceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove installed config.
        /// </summary>
        internal static string FP_BtnUninstallAllText {
            get {
                return ResourceManager.GetString("FP_BtnUninstallAllText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove selected config.
        /// </summary>
        internal static string FP_BtnUninstallSelectedText {
            get {
                return ResourceManager.GetString("FP_BtnUninstallSelectedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update selected config.
        /// </summary>
        internal static string FP_BtnUpdateText {
            get {
                return ResourceManager.GetString("FP_BtnUpdateText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find downloaded archive with FPS-config. Please try again later..
        /// </summary>
        internal static string FP_DownloadError {
            get {
                return ResourceManager.GetString("FP_DownloadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load FPS-config to Config Editor!.
        /// </summary>
        internal static string FP_EditorLoadFailure {
            get {
                return ResourceManager.GetString("FP_EditorLoadFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to check hash sum of the downloaded file. Maybe it was damaged during transfer. Please try again later!.
        /// </summary>
        internal static string FP_HashError {
            get {
                return ResourceManager.GetString("FP_HashError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not install the selected config!.
        /// </summary>
        internal static string FP_InstallFailed {
            get {
                return ResourceManager.GetString("FP_InstallFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install the selected FPS-config?.
        /// </summary>
        internal static string FP_InstallQuestion {
            get {
                return ResourceManager.GetString("FP_InstallQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FPS config has been successfully installed!.
        /// </summary>
        internal static string FP_InstallSuccessful {
            get {
                return ResourceManager.GetString("FP_InstallSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We have no FPS-configs for the selected game. This page will be disabled..
        /// </summary>
        internal static string FP_NoCfgGame {
            get {
                return ResourceManager.GetString("FP_NoCfgGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unfortunately, the description of the chosen config is not available. We apologize for any inconveniences..
        /// </summary>
        internal static string FP_NoDescr {
            get {
                return ResourceManager.GetString("FP_NoDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred during removal of the installed config!.
        /// </summary>
        internal static string FP_RemoveFailed {
            get {
                return ResourceManager.GetString("FP_RemoveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed FPS-config has been successfully removed!.
        /// </summary>
        internal static string FP_RemoveSuccessful {
            get {
                return ResourceManager.GetString("FP_RemoveSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the config file from the list above!.
        /// </summary>
        internal static string FP_SelectFromList {
            get {
                return ResourceManager.GetString("FP_SelectFromList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove the selected FPS-config?.
        /// </summary>
        internal static string FP_UninstallQuestion {
            get {
                return ResourceManager.GetString("FP_UninstallQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close {0}?.
        /// </summary>
        internal static string FrmCloseQuery {
            get {
                return ResourceManager.GetString("FrmCloseQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning! Restricted symbols were detected in the game&apos;s installation path. Steam and the games may not work correctly..
        /// </summary>
        internal static string GameNonASCIIDetected {
            get {
                return ResourceManager.GetString("GameNonASCIIDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game was installed correctly: directory path does not contain any restricted symbols..
        /// </summary>
        internal static string GameNonASCIINotDetected {
            get {
                return ResourceManager.GetString("GameNonASCIINotDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable DirectX 8 mode rendering? It can significantly increase performance, but some games does not support it..
        /// </summary>
        internal static string GT_DxLevelMsg {
            get {
                return ResourceManager.GetString("GT_DxLevelMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to set the video settings to the recommended maximum? This will require a powerful computer!.
        /// </summary>
        internal static string GT_MaxPerfMsg {
            get {
                return ResourceManager.GetString("GT_MaxPerfMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to set the video settings to the recommended minimum? This will increase the game&apos;s performance..
        /// </summary>
        internal static string GT_MinPerfMsg {
            get {
                return ResourceManager.GetString("GT_MinPerfMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to set all video settings in order to save them into a file..
        /// </summary>
        internal static string GT_NCFNReady {
            get {
                return ResourceManager.GetString("GT_NCFNReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done. Don&apos;t forget to adjust and save changes!.
        /// </summary>
        internal static string GT_PerfSet {
            get {
                return ResourceManager.GetString("GT_PerfSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while saving video settings!.
        /// </summary>
        internal static string GT_SaveFailure {
            get {
                return ResourceManager.GetString("GT_SaveFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save your changes?.
        /// </summary>
        internal static string GT_SaveMsg {
            get {
                return ResourceManager.GetString("GT_SaveMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes ware saved successfully!.
        /// </summary>
        internal static string GT_SaveSuccess {
            get {
                return ResourceManager.GetString("GT_SaveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not read video settings of the selected game. Please start it at least once or remove -autoconfig command-line option..
        /// </summary>
        internal static string GT_VideoLoadErr {
            get {
                return ResourceManager.GetString("GT_VideoLoadErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install selected HUD.
        /// </summary>
        internal static string HD_BtnInstallText {
            get {
                return ResourceManager.GetString("HD_BtnInstallText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update selected HUD.
        /// </summary>
        internal static string HD_BtnUpdateText {
            get {
                return ResourceManager.GetString("HD_BtnUpdateText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find downloaded HUD archive. Please try again later..
        /// </summary>
        internal static string HD_DownloadError {
            get {
                return ResourceManager.GetString("HD_DownloadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to check hash sum of the downloaded file. Maybe it was damaged during transfer. Please try again later!.
        /// </summary>
        internal static string HD_HashError {
            get {
                return ResourceManager.GetString("HD_HashError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start web browser to visit the HUD&apos;s homepage!.
        /// </summary>
        internal static string HD_HomepageError {
            get {
                return ResourceManager.GetString("HD_HomepageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured during HUD installation. Please try again later..
        /// </summary>
        internal static string HD_InstallError {
            get {
                return ResourceManager.GetString("HD_InstallError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HUD was successfully installed!.
        /// </summary>
        internal static string HD_InstallSuccessfull {
            get {
                return ResourceManager.GetString("HD_InstallSuccessfull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last HUD update time: {0}..
        /// </summary>
        internal static string HD_LastUpdateInfo {
            get {
                return ResourceManager.GetString("HD_LastUpdateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected HUD is not fully compatible with the latest version of the game..
        /// </summary>
        internal static string HD_NotTested {
            get {
                return ResourceManager.GetString("HD_NotTested", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to show the selected HUD&apos;s directory in the file manager!.
        /// </summary>
        internal static string HD_OpenDirError {
            get {
                return ResourceManager.GetString("HD_OpenDirError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation of outdated HUDs is not allowed. Please update database or select another HUD..
        /// </summary>
        internal static string HD_Outdated {
            get {
                return ResourceManager.GetString("HD_Outdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start keyboard helper plugin. Try again later!.
        /// </summary>
        internal static string KB_StartError {
            get {
                return ResourceManager.GetString("KB_StartError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not purge log file! Please try again later..
        /// </summary>
        internal static string LV_ClearEx {
            get {
                return ResourceManager.GetString("LV_ClearEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load error log. Try again later..
        /// </summary>
        internal static string LV_LoadFailed {
            get {
                return ResourceManager.GetString("LV_LoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while converting selected items to a new format!.
        /// </summary>
        internal static string MM_ConvertItemsError {
            get {
                return ResourceManager.GetString("MM_ConvertItemsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conversion from SteamIDv3 to legacy SteamID32 is not allowed!.
        /// </summary>
        internal static string MM_ConvRest {
            get {
                return ResourceManager.GetString("MM_ConvRest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while copying selected items to clipboard!.
        /// </summary>
        internal static string MM_CopyItemsError {
            get {
                return ResourceManager.GetString("MM_CopyItemsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while cutting selected items to clipboard!.
        /// </summary>
        internal static string MM_CutItemsError {
            get {
                return ResourceManager.GetString("MM_CutItemsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while parsing game banlist file. Please try again later..
        /// </summary>
        internal static string MM_ExceptionDetected {
            get {
                return ResourceManager.GetString("MM_ExceptionDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to view the selected item&apos;s Steam profile in a web browser..
        /// </summary>
        internal static string MM_OpenItemProfileError {
            get {
                return ResourceManager.GetString("MM_OpenItemProfileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to paste items from clipboard!.
        /// </summary>
        internal static string MM_PasteItemsError {
            get {
                return ResourceManager.GetString("MM_PasteItemsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to update items from the database!.
        /// </summary>
        internal static string MM_RefreshError {
            get {
                return ResourceManager.GetString("MM_RefreshError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while deleting selected items!.
        /// </summary>
        internal static string MM_RemoveItemsError {
            get {
                return ResourceManager.GetString("MM_RemoveItemsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your changes ware saved!.
        /// </summary>
        internal static string MM_SavedOK {
            get {
                return ResourceManager.GetString("MM_SavedOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while saving database file! It may be corrupted..
        /// </summary>
        internal static string MM_SaveException {
            get {
                return ResourceManager.GetString("MM_SaveException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings were saved successfully. Some of them will be activated only on next launch..
        /// </summary>
        internal static string Opts_Saved {
            get {
                return ResourceManager.GetString("Opts_Saved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} application is running! To execute this cleanup please close it first..
        /// </summary>
        internal static string PS_AppRunning {
            get {
                return ResourceManager.GetString("PS_AppRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured during packing files. The archive was not created!.
        /// </summary>
        internal static string PS_ArchFailed {
            get {
                return ResourceManager.GetString("PS_ArchFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleanup targets are not yet available! Please try again in 10 seconds..
        /// </summary>
        internal static string PS_BwBusy {
            get {
                return ResourceManager.GetString("PS_BwBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleaning up....
        /// </summary>
        internal static string PS_CleanInProgress {
            get {
                return ResourceManager.GetString("PS_CleanInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred during the package cache removal! Perhaps you have not enough rights for doing this..
        /// </summary>
        internal static string PS_CleanPackagesException {
            get {
                return ResourceManager.GetString("PS_CleanPackagesException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred during the registry entries removal! Perhaps you have not enough rights for doing this..
        /// </summary>
        internal static string PS_CleanRegistryException {
            get {
                return ResourceManager.GetString("PS_CleanRegistryException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occured while deleting files. Some files were not deleted!.
        /// </summary>
        internal static string PS_CleanupErr {
            get {
                return ResourceManager.GetString("PS_CleanupErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clean selected {0}?.
        /// </summary>
        internal static string PS_CleanupExecuteQ {
            get {
                return ResourceManager.GetString("PS_CleanupExecuteQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleanup has been successfully completed!.
        /// </summary>
        internal static string PS_CleanupSuccess {
            get {
                return ResourceManager.GetString("PS_CleanupSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while trying to open cleanup window. Additional information about this issue has been added to logs..
        /// </summary>
        internal static string PS_ClnWndInitError {
            get {
                return ResourceManager.GetString("PS_ClnWndInitError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform this cleanup?.
        /// </summary>
        internal static string PS_ExecuteMSG {
            get {
                return ResourceManager.GetString("PS_ExecuteMSG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We can free up to {0} hard-disk space after cleanup..
        /// </summary>
        internal static string PS_FrFInfo {
            get {
                return ResourceManager.GetString("PS_FrFInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleanup is not required..
        /// </summary>
        internal static string PS_LoadErr {
            get {
                return ResourceManager.GetString("PS_LoadErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam process has been successfully terminated!.
        /// </summary>
        internal static string PS_ProcessDetected {
            get {
                return ResourceManager.GetString("PS_ProcessDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting cleanup....
        /// </summary>
        internal static string PS_ProcessPrepare {
            get {
                return ResourceManager.GetString("PS_ProcessPrepare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating backup....
        /// </summary>
        internal static string PS_ProgressArchive {
            get {
                return ResourceManager.GetString("PS_ProgressArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleanup in progress....
        /// </summary>
        internal static string PS_ProgressCleanup {
            get {
                return ResourceManager.GetString("PS_ProgressCleanup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done..
        /// </summary>
        internal static string PS_ProgressFinished {
            get {
                return ResourceManager.GetString("PS_ProgressFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files for cleanup were selected! Please select them and run this process again..
        /// </summary>
        internal static string PS_SelectItemsMsg {
            get {
                return ResourceManager.GetString("PS_SelectItemsMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cleanup has been successfully completed. Steam will run in recovery mode right now!.
        /// </summary>
        internal static string PS_SeqCompleted {
            get {
                return ResourceManager.GetString("PS_SeqCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to run the Steam Service automatic repair procedure! Perhaps you have not enough rights for doing this..
        /// </summary>
        internal static string PS_ServiceRepairException {
            get {
                return ResourceManager.GetString("PS_ServiceRepairException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to shut down the running Steam client! Perhaps you have not enough rights for doing this..
        /// </summary>
        internal static string PS_ShutdownClientException {
            get {
                return ResourceManager.GetString("PS_ShutdownClientException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to start the installed Steam client! Perhaps you have not enough rights for doing this..
        /// </summary>
        internal static string PS_StartClientException {
            get {
                return ResourceManager.GetString("PS_StartClientException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No file selected for installation! Please choose one using the Browse button, then click Install..
        /// </summary>
        internal static string QI_FileNotSelected {
            get {
                return ResourceManager.GetString("QI_FileNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while generating the configuration file! This file will not be installed..
        /// </summary>
        internal static string QI_GenerateConfigError {
            get {
                return ResourceManager.GetString("QI_GenerateConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected file require a special configuration file in order to be available in the game. Unfortunately, it was found in the same directory. Generate it automatically?.
        /// </summary>
        internal static string QI_GenerateConfigQuestion {
            get {
                return ResourceManager.GetString("QI_GenerateConfigQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to install the selected file!.
        /// </summary>
        internal static string QI_InstallationError {
            get {
                return ResourceManager.GetString("QI_InstallationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected file has been installed successfully!.
        /// </summary>
        internal static string QI_InstallationSuccessful {
            get {
                return ResourceManager.GetString("QI_InstallationSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string RP_CloseButtonText {
            get {
                return ResourceManager.GetString("RP_CloseButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressed report {0} has been successfully created! Now we will show it in the Windows Explorer. You can check it and upload to the technical support service or forum..
        /// </summary>
        internal static string RP_ComprGen {
            get {
                return ResourceManager.GetString("RP_ComprGen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to execute Microsoft System Information tool. Perhaps it is not installed on this operating system. Creating a report will be impossible. Terminating..
        /// </summary>
        internal static string RP_GenException {
            get {
                return ResourceManager.GetString("RP_GenException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured during files removal. Some files were not deleted..
        /// </summary>
        internal static string RW_RmException {
            get {
                return ResourceManager.GetString("RW_RmException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to show SteamID selector dialog due to not enough SteamIDs found!.
        /// </summary>
        internal static string SD_NotEnoughStmIDs {
            get {
                return ResourceManager.GetString("SD_NotEnoughStmIDs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready..
        /// </summary>
        internal static string StatusNormal {
            get {
                return ResourceManager.GetString("StatusNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opened file: {0}..
        /// </summary>
        internal static string StatusOpenedFile {
            get {
                return ResourceManager.GetString("StatusOpenedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restricted symbols were detected in the Steam installation directory path. Steam and some games can work incorrectly. We recommend to reinstall Steam into a directory, which will contain only latin characters and numbers..
        /// </summary>
        internal static string SteamNonASCIIDetected {
            get {
                return ResourceManager.GetString("SteamNonASCIIDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No restricted symbols in the Steam installation directory path were detected. No actions needed..
        /// </summary>
        internal static string SteamNonASCIINotDetected {
            get {
                return ResourceManager.GetString("SteamNonASCIINotDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You refused to enter the path to Steam, so the program will be terminated!.
        /// </summary>
        internal static string SteamPathCancel {
            get {
                return ResourceManager.GetString("SteamPathCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have entered the wrong Steam path! The program will be terminated..
        /// </summary>
        internal static string SteamPathEnterErr {
            get {
                return ResourceManager.GetString("SteamPathEnterErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unnamed.cfg.
        /// </summary>
        internal static string UnnamedFileName {
            get {
                return ResourceManager.GetString("UnnamedFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update check failed. Please try again later..
        /// </summary>
        internal static string UPD_AppCheckFailure {
            get {
                return ResourceManager.GetString("UPD_AppCheckFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No new updates available. Your application is up to date..
        /// </summary>
        internal static string UPD_AppNoUpdates {
            get {
                return ResourceManager.GetString("UPD_AppNoUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new version {0} is available, but automatic updates are not supported on this platform. Do you want to see the changelog page, including download links, in a web browser?.
        /// </summary>
        internal static string UPD_AppOtherPlatform {
            get {
                return ResourceManager.GetString("UPD_AppOtherPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application update available. New version: {0}..
        /// </summary>
        internal static string UPD_AppUpdateAvail {
            get {
                return ResourceManager.GetString("UPD_AppUpdateAvail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloaded file has incorrect hash. Maybe it was corrupted during transfer. Please try again later!.
        /// </summary>
        internal static string UPD_HashFailure {
            get {
                return ResourceManager.GetString("UPD_HashFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update is not required because you have the latest version of the program..
        /// </summary>
        internal static string UPD_LatestInstalled {
            get {
                return ResourceManager.GetString("UPD_LatestInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while trying to run the installer. The program has not been updated. Run the update again later!.
        /// </summary>
        internal static string UPD_UpdateFailure {
            get {
                return ResourceManager.GetString("UPD_UpdateFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new version has been successfully received from server. We will install it now!.
        /// </summary>
        internal static string UPD_UpdateSuccessful {
            get {
                return ResourceManager.GetString("UPD_UpdateSuccessful", resourceCulture);
            }
        }
    }
}
