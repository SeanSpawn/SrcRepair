<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="iconApp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>